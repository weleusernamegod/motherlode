                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module inventory
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _materials
                                     12 	.globl _update_inventory
                                     13 	.globl _calculate_cargo
                                     14 	.globl _sell_all_ores
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
      000000                         26 _materials::
      000000                         27 	.ds 192
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src/inventory.c:43: void update_inventory(void) {
                                     49 ;	---------------------------------
                                     50 ; Function update_inventory
                                     51 ; ---------------------------------
      000000                         52 _update_inventory::
                                     53 ;src/inventory.c:44: uint8_t material_index = level_array[depth][width];
      000000 01r00r00         [12]   54 	ld	bc, #_level_array+0
      000003 21r00r00         [12]   55 	ld	hl, #_depth
      000006 6E               [ 8]   56 	ld	l, (hl)
                                     57 ;	spillPairReg hl
                                     58 ;	spillPairReg hl
      000007 26 00            [ 8]   59 	ld	h, #0x00
                                     60 ;	spillPairReg hl
                                     61 ;	spillPairReg hl
      000009 29               [ 8]   62 	add	hl, hl
      00000A 29               [ 8]   63 	add	hl, hl
      00000B 29               [ 8]   64 	add	hl, hl
      00000C 29               [ 8]   65 	add	hl, hl
      00000D 09               [ 8]   66 	add	hl, bc
      00000E 4D               [ 4]   67 	ld	c, l
      00000F 44               [ 4]   68 	ld	b, h
      000010 21r00r00         [12]   69 	ld	hl, #_width
      000013 6E               [ 8]   70 	ld	l, (hl)
                                     71 ;	spillPairReg hl
                                     72 ;	spillPairReg hl
      000014 26 00            [ 8]   73 	ld	h, #0x00
      000016 09               [ 8]   74 	add	hl, bc
      000017 4E               [ 8]   75 	ld	c, (hl)
                                     76 ;src/inventory.c:46: if (material_index >= COAL && material_index <= DIAMOND) {
      000018 79               [ 4]   77 	ld	a, c
      000019 D6 04            [ 8]   78 	sub	a, #0x04
      00001B 38 14            [12]   79 	jr	C, 00102$
      00001D 3E 12            [ 8]   80 	ld	a, #0x12
      00001F 91               [ 4]   81 	sub	a, c
      000020 38 0F            [12]   82 	jr	C, 00102$
                                     83 ;src/inventory.c:47: materials[material_index].inventory++;
      000022 69               [ 4]   84 	ld	l, c
                                     85 ;	spillPairReg hl
                                     86 ;	spillPairReg hl
      000023 26 00            [ 8]   87 	ld	h, #0x00
                                     88 ;	spillPairReg hl
                                     89 ;	spillPairReg hl
      000025 29               [ 8]   90 	add	hl, hl
      000026 29               [ 8]   91 	add	hl, hl
      000027 29               [ 8]   92 	add	hl, hl
      000028 11r00r00         [12]   93 	ld	de, #_materials
      00002B 19               [ 8]   94 	add	hl, de
      00002C 11 07 00         [12]   95 	ld	de, #0x0007
      00002F 19               [ 8]   96 	add	hl, de
      000030 34               [12]   97 	inc	(hl)
      000031                         98 00102$:
                                     99 ;src/inventory.c:50: if (material_index == BONES) {
      000031 79               [ 4]  100 	ld	a, c
      000032 D6 1E            [ 8]  101 	sub	a, #0x1e
      000034 20 13            [12]  102 	jr	NZ, 00110$
                                    103 ;src/inventory.c:51: player.money += 1000;
      000036 21r56r01         [12]  104 	ld	hl, #(_player + 342)
      000039 2A               [ 8]  105 	ld	a, (hl+)
      00003A 4F               [ 4]  106 	ld	c, a
      00003B 46               [ 8]  107 	ld	b, (hl)
      00003C 21 E8 03         [12]  108 	ld	hl, #0x03e8
      00003F 09               [ 8]  109 	add	hl, bc
      000040 4D               [ 4]  110 	ld	c, l
      000041 44               [ 4]  111 	ld	b, h
      000042 21r56r01         [12]  112 	ld	hl, #(_player + 342)
      000045 79               [ 4]  113 	ld	a, c
      000046 22               [ 8]  114 	ld	(hl+), a
      000047 70               [ 8]  115 	ld	(hl), b
      000048 C9               [16]  116 	ret
      000049                        117 00110$:
                                    118 ;src/inventory.c:52: } else if (material_index == ARTEFACT) {
      000049 79               [ 4]  119 	ld	a, c
      00004A D6 1F            [ 8]  120 	sub	a, #0x1f
      00004C 20 13            [12]  121 	jr	NZ, 00107$
                                    122 ;src/inventory.c:53: player.money += 5000;
      00004E 21r56r01         [12]  123 	ld	hl, #(_player + 342)
      000051 2A               [ 8]  124 	ld	a, (hl+)
      000052 4F               [ 4]  125 	ld	c, a
      000053 46               [ 8]  126 	ld	b, (hl)
      000054 21 88 13         [12]  127 	ld	hl, #0x1388
      000057 09               [ 8]  128 	add	hl, bc
      000058 4D               [ 4]  129 	ld	c, l
      000059 44               [ 4]  130 	ld	b, h
      00005A 21r56r01         [12]  131 	ld	hl, #(_player + 342)
      00005D 79               [ 4]  132 	ld	a, c
      00005E 22               [ 8]  133 	ld	(hl+), a
      00005F 70               [ 8]  134 	ld	(hl), b
      000060 C9               [16]  135 	ret
      000061                        136 00107$:
                                    137 ;src/inventory.c:54: } else if (material_index == TREASURE) {
      000061 79               [ 4]  138 	ld	a, c
      000062 D6 20            [ 8]  139 	sub	a, #0x20
      000064 C0               [20]  140 	ret	NZ
                                    141 ;src/inventory.c:55: player.money += 10000;
      000065 21r56r01         [12]  142 	ld	hl, #(_player + 342)
      000068 2A               [ 8]  143 	ld	a, (hl+)
      000069 4F               [ 4]  144 	ld	c, a
      00006A 46               [ 8]  145 	ld	b, (hl)
      00006B 21 10 27         [12]  146 	ld	hl, #0x2710
      00006E 09               [ 8]  147 	add	hl, bc
      00006F 4D               [ 4]  148 	ld	c, l
      000070 44               [ 4]  149 	ld	b, h
      000071 21r56r01         [12]  150 	ld	hl, #(_player + 342)
      000074 79               [ 4]  151 	ld	a, c
      000075 22               [ 8]  152 	ld	(hl+), a
      000076 70               [ 8]  153 	ld	(hl), b
                                    154 ;src/inventory.c:57: }
      000077 C9               [16]  155 	ret
                                    156 ;src/inventory.c:59: void calculate_cargo(void) {
                                    157 ;	---------------------------------
                                    158 ; Function calculate_cargo
                                    159 ; ---------------------------------
      000078                        160 _calculate_cargo::
      000078 3B               [ 8]  161 	dec	sp
      000079 3B               [ 8]  162 	dec	sp
                                    163 ;src/inventory.c:60: int total_weight = 0;
      00007A AF               [ 4]  164 	xor	a, a
      00007B F8 00            [12]  165 	ldhl	sp,	#0
      00007D 22               [ 8]  166 	ld	(hl+), a
      00007E 77               [ 8]  167 	ld	(hl), a
                                    168 ;src/inventory.c:61: for (int i = COAL; i <= DIAMOND; i++) {
      00007F 01 04 00         [12]  169 	ld	bc, #0x0004
      000082                        170 00103$:
      000082 58               [ 4]  171 	ld	e, b
      000083 16 00            [ 8]  172 	ld	d, #0x00
      000085 3E 12            [ 8]  173 	ld	a, #0x12
      000087 B9               [ 4]  174 	cp	a, c
      000088 3E 00            [ 8]  175 	ld	a, #0x00
      00008A 98               [ 4]  176 	sbc	a, b
      00008B CB 7B            [ 8]  177 	bit	7, e
      00008D 28 07            [12]  178 	jr	Z, 00122$
      00008F CB 7A            [ 8]  179 	bit	7, d
      000091 20 08            [12]  180 	jr	NZ, 00123$
      000093 BF               [ 4]  181 	cp	a, a
      000094 18 05            [12]  182 	jr	00123$
      000096                        183 00122$:
      000096 CB 7A            [ 8]  184 	bit	7, d
      000098 28 01            [12]  185 	jr	Z, 00123$
      00009A 37               [ 4]  186 	scf
      00009B                        187 00123$:
      00009B 38 29            [12]  188 	jr	C, 00101$
                                    189 ;src/inventory.c:62: total_weight += materials[i].inventory * materials[i].weight;
      00009D 69               [ 4]  190 	ld	l, c
      00009E 60               [ 4]  191 	ld	h, b
      00009F 29               [ 8]  192 	add	hl, hl
      0000A0 29               [ 8]  193 	add	hl, hl
      0000A1 29               [ 8]  194 	add	hl, hl
      0000A2 7D               [ 4]  195 	ld	a, l
      0000A3 C6r00            [ 8]  196 	add	a, #<(_materials)
      0000A5 5F               [ 4]  197 	ld	e, a
      0000A6 7C               [ 4]  198 	ld	a, h
      0000A7 CEs00            [ 8]  199 	adc	a, #>(_materials)
      0000A9 57               [ 4]  200 	ld	d, a
      0000AA 21 07 00         [12]  201 	ld	hl, #0x0007
      0000AD 19               [ 8]  202 	add	hl, de
      0000AE 6E               [ 8]  203 	ld	l, (hl)
                                    204 ;	spillPairReg hl
      0000AF 13               [ 8]  205 	inc	de
      0000B0 13               [ 8]  206 	inc	de
      0000B1 13               [ 8]  207 	inc	de
      0000B2 13               [ 8]  208 	inc	de
      0000B3 1A               [ 8]  209 	ld	a, (de)
      0000B4 5F               [ 4]  210 	ld	e, a
      0000B5 C5               [16]  211 	push	bc
      0000B6 7D               [ 4]  212 	ld	a, l
      0000B7 CDr00r00         [24]  213 	call	__muluchar
      0000BA 59               [ 4]  214 	ld	e, c
      0000BB 50               [ 4]  215 	ld	d, b
      0000BC C1               [12]  216 	pop	bc
      0000BD E1               [12]  217 	pop	hl
      0000BE E5               [16]  218 	push	hl
      0000BF 19               [ 8]  219 	add	hl, de
      0000C0 33               [ 8]  220 	inc	sp
      0000C1 33               [ 8]  221 	inc	sp
      0000C2 E5               [16]  222 	push	hl
                                    223 ;src/inventory.c:61: for (int i = COAL; i <= DIAMOND; i++) {
      0000C3 03               [ 8]  224 	inc	bc
      0000C4 18 BC            [12]  225 	jr	00103$
      0000C6                        226 00101$:
                                    227 ;src/inventory.c:64: player.cargo.current_value = total_weight;
      0000C6 C1               [12]  228 	pop	bc
      0000C7 C5               [16]  229 	push	bc
      0000C8 21rBBr00         [12]  230 	ld	hl, #(_player + 187)
      0000CB 71               [ 8]  231 	ld	(hl), c
      0000CC 23               [ 8]  232 	inc	hl
      0000CD 70               [ 8]  233 	ld	(hl), b
                                    234 ;src/inventory.c:65: }
      0000CE 33               [ 8]  235 	inc	sp
      0000CF 33               [ 8]  236 	inc	sp
      0000D0 C9               [16]  237 	ret
                                    238 ;src/inventory.c:67: void sell_all_ores(void) {
                                    239 ;	---------------------------------
                                    240 ; Function sell_all_ores
                                    241 ; ---------------------------------
      0000D1                        242 _sell_all_ores::
      0000D1 E8 FC            [16]  243 	add	sp, #-4
                                    244 ;src/inventory.c:68: int total_value = 0;
      0000D3 AF               [ 4]  245 	xor	a, a
      0000D4 F8 00            [12]  246 	ldhl	sp,	#0
      0000D6 22               [ 8]  247 	ld	(hl+), a
                                    248 ;src/inventory.c:70: for (int i = COAL; i <= DIAMOND; i++) {
      0000D7 22               [ 8]  249 	ld	(hl+), a
      0000D8 3E 04            [ 8]  250 	ld	a, #0x04
      0000DA 22               [ 8]  251 	ld	(hl+), a
      0000DB AF               [ 4]  252 	xor	a, a
      0000DC 77               [ 8]  253 	ld	(hl), a
      0000DD                        254 00104$:
      0000DD F8 02            [12]  255 	ldhl	sp,	#2
      0000DF 3E 12            [ 8]  256 	ld	a, #0x12
      0000E1 96               [ 8]  257 	sub	a, (hl)
      0000E2 23               [ 8]  258 	inc	hl
      0000E3 3E 00            [ 8]  259 	ld	a, #0x00
      0000E5 9E               [ 8]  260 	sbc	a, (hl)
      0000E6 3E 00            [ 8]  261 	ld	a, #0x00
      0000E8 57               [ 4]  262 	ld	d, a
      0000E9 CB 7E            [12]  263 	bit	7, (hl)
      0000EB 28 07            [12]  264 	jr	Z, 00141$
      0000ED CB 7A            [ 8]  265 	bit	7, d
      0000EF 20 08            [12]  266 	jr	NZ, 00142$
      0000F1 BF               [ 4]  267 	cp	a, a
      0000F2 18 05            [12]  268 	jr	00142$
      0000F4                        269 00141$:
      0000F4 CB 7A            [ 8]  270 	bit	7, d
      0000F6 28 01            [12]  271 	jr	Z, 00142$
      0000F8 37               [ 4]  272 	scf
      0000F9                        273 00142$:
      0000F9 38 3D            [12]  274 	jr	C, 00101$
                                    275 ;src/inventory.c:71: total_value += materials[i].inventory * materials[i].value;
      0000FB F8 02            [12]  276 	ldhl	sp,	#2
      0000FD 7E               [ 8]  277 	ld	a, (hl)
      0000FE 0E 00            [ 8]  278 	ld	c, #0x00
      000100 87               [ 4]  279 	add	a, a
      000101 CB 11            [ 8]  280 	rl	c
      000103 87               [ 4]  281 	add	a, a
      000104 CB 11            [ 8]  282 	rl	c
      000106 87               [ 4]  283 	add	a, a
      000107 CB 11            [ 8]  284 	rl	c
      000109 C6r00            [ 8]  285 	add	a, #<(_materials)
      00010B 5F               [ 4]  286 	ld	e, a
      00010C 79               [ 4]  287 	ld	a, c
      00010D CEs00            [ 8]  288 	adc	a, #>(_materials)
      00010F 57               [ 4]  289 	ld	d, a
      000110 21 07 00         [12]  290 	ld	hl, #0x0007
      000113 19               [ 8]  291 	add	hl, de
      000114 4E               [ 8]  292 	ld	c, (hl)
      000115 21 05 00         [12]  293 	ld	hl, #0x0005
      000118 19               [ 8]  294 	add	hl, de
      000119 2A               [ 8]  295 	ld	a,	(hl+)
      00011A 66               [ 8]  296 	ld	h, (hl)
                                    297 ;	spillPairReg hl
      00011B 6F               [ 4]  298 	ld	l, a
                                    299 ;	spillPairReg hl
                                    300 ;	spillPairReg hl
      00011C 59               [ 4]  301 	ld	e, c
      00011D 16 00            [ 8]  302 	ld	d, #0x00
      00011F 4D               [ 4]  303 	ld	c, l
      000120 44               [ 4]  304 	ld	b, h
      000121 CDr00r00         [24]  305 	call	__mulint
      000124 F8 00            [12]  306 	ldhl	sp,	#0
      000126 2A               [ 8]  307 	ld	a, (hl+)
      000127 5E               [ 8]  308 	ld	e, (hl)
                                    309 ;src/inventory.c:70: for (int i = COAL; i <= DIAMOND; i++) {
      000128 23               [ 8]  310 	inc	hl
      000129 81               [ 4]  311 	add	a, c
      00012A 4F               [ 4]  312 	ld	c, a
      00012B 7B               [ 4]  313 	ld	a, e
      00012C 88               [ 4]  314 	adc	a, b
      00012D 47               [ 4]  315 	ld	b, a
      00012E 33               [ 8]  316 	inc	sp
      00012F 33               [ 8]  317 	inc	sp
      000130 C5               [16]  318 	push	bc
      000131 34               [12]  319 	inc	(hl)
      000132 20 A9            [12]  320 	jr	NZ, 00104$
      000134 23               [ 8]  321 	inc	hl
      000135 34               [12]  322 	inc	(hl)
      000136 18 A5            [12]  323 	jr	00104$
      000138                        324 00101$:
                                    325 ;src/inventory.c:74: player.money += total_value;
      000138 21r56r01         [12]  326 	ld	hl, #(_player + 342)
      00013B 2A               [ 8]  327 	ld	a, (hl+)
      00013C 4F               [ 4]  328 	ld	c, a
      00013D 46               [ 8]  329 	ld	b, (hl)
      00013E E1               [12]  330 	pop	hl
      00013F E5               [16]  331 	push	hl
      000140 09               [ 8]  332 	add	hl, bc
      000141 4D               [ 4]  333 	ld	c, l
      000142 44               [ 4]  334 	ld	b, h
      000143 21r56r01         [12]  335 	ld	hl, #(_player + 342)
      000146 79               [ 4]  336 	ld	a, c
      000147 22               [ 8]  337 	ld	(hl+), a
      000148 70               [ 8]  338 	ld	(hl), b
                                    339 ;src/inventory.c:77: for (int i = COAL; i <= DIAMOND; i++) {
      000149 01 04 00         [12]  340 	ld	bc, #0x0004
      00014C                        341 00107$:
      00014C 58               [ 4]  342 	ld	e, b
      00014D 16 00            [ 8]  343 	ld	d, #0x00
      00014F 3E 12            [ 8]  344 	ld	a, #0x12
      000151 B9               [ 4]  345 	cp	a, c
      000152 3E 00            [ 8]  346 	ld	a, #0x00
      000154 98               [ 4]  347 	sbc	a, b
      000155 CB 7B            [ 8]  348 	bit	7, e
      000157 28 07            [12]  349 	jr	Z, 00145$
      000159 CB 7A            [ 8]  350 	bit	7, d
      00015B 20 08            [12]  351 	jr	NZ, 00146$
      00015D BF               [ 4]  352 	cp	a, a
      00015E 18 05            [12]  353 	jr	00146$
      000160                        354 00145$:
      000160 CB 7A            [ 8]  355 	bit	7, d
      000162 28 01            [12]  356 	jr	Z, 00146$
      000164 37               [ 4]  357 	scf
      000165                        358 00146$:
      000165 38 12            [12]  359 	jr	C, 00102$
                                    360 ;src/inventory.c:78: materials[i].inventory = 0;  // Reset inventory after selling
      000167 69               [ 4]  361 	ld	l, c
      000168 60               [ 4]  362 	ld	h, b
      000169 29               [ 8]  363 	add	hl, hl
      00016A 29               [ 8]  364 	add	hl, hl
      00016B 29               [ 8]  365 	add	hl, hl
      00016C 11r00r00         [12]  366 	ld	de, #_materials
      00016F 19               [ 8]  367 	add	hl, de
      000170 11 07 00         [12]  368 	ld	de, #0x0007
      000173 19               [ 8]  369 	add	hl, de
      000174 36 00            [12]  370 	ld	(hl), #0x00
                                    371 ;src/inventory.c:77: for (int i = COAL; i <= DIAMOND; i++) {
      000176 03               [ 8]  372 	inc	bc
      000177 18 D3            [12]  373 	jr	00107$
      000179                        374 00102$:
                                    375 ;src/inventory.c:80: currentGameState = GAME_STATE_PLAY;
      000179 21r00r00         [12]  376 	ld	hl, #_currentGameState
      00017C 36 03            [12]  377 	ld	(hl), #0x03
                                    378 ;src/inventory.c:82: }
      00017E E8 04            [16]  379 	add	sp, #4
      000180 C9               [16]  380 	ret
                                    381 	.area _CODE
      000181                        382 ___str_0:
      000181 45 6D 70 74 79         383 	.ascii "Empty"
      000186 00                     384 	.db 0x00
      000187                        385 ___str_1:
      000187 44 69 72 74            386 	.ascii "Dirt"
      00018B 00                     387 	.db 0x00
      00018C                        388 ___str_2:
      00018C 47 72 61 73 73         389 	.ascii "Grass"
      000191 00                     390 	.db 0x00
      000192                        391 ___str_3:
      000192 53 74 6F 6E 65         392 	.ascii "Stone"
      000197 00                     393 	.db 0x00
      000198                        394 ___str_4:
      000198 43 6F 61 6C            395 	.ascii "Coal"
      00019C 00                     396 	.db 0x00
      00019D                        397 ___str_5:
      00019D 49 72 6F 6E            398 	.ascii "Iron"
      0001A1 00                     399 	.db 0x00
      0001A2                        400 ___str_6:
      0001A2 43 6F 70 70 65 72      401 	.ascii "Copper"
      0001A8 00                     402 	.db 0x00
      0001A9                        403 ___str_7:
      0001A9 54 69 6E               404 	.ascii "Tin"
      0001AC 00                     405 	.db 0x00
      0001AD                        406 ___str_8:
      0001AD 53 69 6C 76 65 72      407 	.ascii "Silver"
      0001B3 00                     408 	.db 0x00
      0001B4                        409 ___str_9:
      0001B4 47 6F 6C 64            410 	.ascii "Gold"
      0001B8 00                     411 	.db 0x00
      0001B9                        412 ___str_10:
      0001B9 4D 69 74 68 72 69 6C   413 	.ascii "Mithril"
      0001C0 00                     414 	.db 0x00
      0001C1                        415 ___str_11:
      0001C1 50 6C 61 74 69 6E 75   416 	.ascii "Platinum"
             6D
      0001C9 00                     417 	.db 0x00
      0001CA                        418 ___str_12:
      0001CA 54 69 74 61 6E 69 75   419 	.ascii "Titanium"
             6D
      0001D2 00                     420 	.db 0x00
      0001D3                        421 ___str_13:
      0001D3 4F 62 73 69 64 69 75   422 	.ascii "Obsidium"
             6D
      0001DB 00                     423 	.db 0x00
      0001DC                        424 ___str_14:
      0001DC 45 6C 65 6D 65 6E 74   425 	.ascii "Elementium"
             69 75 6D
      0001E6 00                     426 	.db 0x00
      0001E7                        427 ___str_15:
      0001E7 41 64 61 6D 61 6E 74   428 	.ascii "Adamantite"
             69 74 65
      0001F1 00                     429 	.db 0x00
      0001F2                        430 ___str_16:
      0001F2 45 6D 65 72 61 6C 64   431 	.ascii "Emerald"
      0001F9 00                     432 	.db 0x00
      0001FA                        433 ___str_17:
      0001FA 52 75 62 79            434 	.ascii "Ruby"
      0001FE 00                     435 	.db 0x00
      0001FF                        436 ___str_18:
      0001FF 44 69 61 6D 6F 6E 64   437 	.ascii "Diamond"
      000206 00                     438 	.db 0x00
      000207                        439 ___str_19:
      000207 4C 61 76 61            440 	.ascii "Lava"
      00020B 00                     441 	.db 0x00
      00020C                        442 ___str_20:
      00020C 47 61 73               443 	.ascii "Gas"
      00020F 00                     444 	.db 0x00
      000210                        445 ___str_21:
      000210 42 6F 6E 65 73         446 	.ascii "Bones"
      000215 00                     447 	.db 0x00
      000216                        448 ___str_22:
      000216 41 72 74 65 66 61 63   449 	.ascii "Artefact"
             74
      00021E 00                     450 	.db 0x00
      00021F                        451 ___str_23:
      00021F 54 72 65 61 73 75 72   452 	.ascii "Treasure"
             65
      000227 00                     453 	.db 0x00
                                    454 	.area _INITIALIZER
      000000                        455 __xinit__materials:
      000000r81r01                  456 	.dw ___str_0
      000002 00                     457 	.db #0x00	; 0
      000003 00                     458 	.db #0x00	; 0
      000004 00                     459 	.db #0x00	; 0
      000005 00 00                  460 	.dw #0x0000
      000007 00                     461 	.db #0x00	; 0
      000008r87r01                  462 	.dw ___str_1
      00000A 01                     463 	.db #0x01	; 1
      00000B 10                     464 	.db #0x10	; 16
      00000C 01                     465 	.db #0x01	; 1
      00000D 00 00                  466 	.dw #0x0000
      00000F 00                     467 	.db #0x00	; 0
      000010r8Cr01                  468 	.dw ___str_2
      000012 02                     469 	.db #0x02	; 2
      000013 10                     470 	.db #0x10	; 16
      000014 01                     471 	.db #0x01	; 1
      000015 00 00                  472 	.dw #0x0000
      000017 00                     473 	.db #0x00	; 0
      000018r92r01                  474 	.dw ___str_3
      00001A 03                     475 	.db #0x03	; 3
      00001B 00                     476 	.db #0x00	; 0
      00001C 00                     477 	.db #0x00	; 0
      00001D 00 00                  478 	.dw #0x0000
      00001F 00                     479 	.db #0x00	; 0
      000020r98r01                  480 	.dw ___str_4
      000022 04                     481 	.db #0x04	; 4
      000023 20                     482 	.db #0x20	; 32
      000024 01                     483 	.db #0x01	; 1
      000025 0F 00                  484 	.dw #0x000f
      000027 00                     485 	.db #0x00	; 0
      000028r9Dr01                  486 	.dw ___str_5
      00002A 05                     487 	.db #0x05	; 5
      00002B 20                     488 	.db #0x20	; 32
      00002C 01                     489 	.db #0x01	; 1
      00002D 1E 00                  490 	.dw #0x001e
      00002F 00                     491 	.db #0x00	; 0
      000030rA2r01                  492 	.dw ___str_6
      000032 06                     493 	.db #0x06	; 6
      000033 28                     494 	.db #0x28	; 40
      000034 02                     495 	.db #0x02	; 2
      000035 3C 00                  496 	.dw #0x003c
      000037 00                     497 	.db #0x00	; 0
      000038rA9r01                  498 	.dw ___str_7
      00003A 07                     499 	.db #0x07	; 7
      00003B 2D                     500 	.db #0x2d	; 45
      00003C 02                     501 	.db #0x02	; 2
      00003D 50 00                  502 	.dw #0x0050
      00003F 00                     503 	.db #0x00	; 0
      000040rADr01                  504 	.dw ___str_8
      000042 08                     505 	.db #0x08	; 8
      000043 32                     506 	.db #0x32	; 50	'2'
      000044 03                     507 	.db #0x03	; 3
      000045 64 00                  508 	.dw #0x0064
      000047 00                     509 	.db #0x00	; 0
      000048rB4r01                  510 	.dw ___str_9
      00004A 09                     511 	.db #0x09	; 9
      00004B 40                     512 	.db #0x40	; 64
      00004C 03                     513 	.db #0x03	; 3
      00004D FA 00                  514 	.dw #0x00fa
      00004F 00                     515 	.db #0x00	; 0
      000050rB9r01                  516 	.dw ___str_10
      000052 0A                     517 	.db #0x0a	; 10
      000053 50                     518 	.db #0x50	; 80	'P'
      000054 04                     519 	.db #0x04	; 4
      000055 F4 01                  520 	.dw #0x01f4
      000057 00                     521 	.db #0x00	; 0
      000058rC1r01                  522 	.dw ___str_11
      00005A 0B                     523 	.db #0x0b	; 11
      00005B 64                     524 	.db #0x64	; 100	'd'
      00005C 05                     525 	.db #0x05	; 5
      00005D EE 02                  526 	.dw #0x02ee
      00005F 00                     527 	.db #0x00	; 0
      000060rCAr01                  528 	.dw ___str_12
      000062 0C                     529 	.db #0x0c	; 12
      000063 78                     530 	.db #0x78	; 120	'x'
      000064 08                     531 	.db #0x08	; 8
      000065 B0 04                  532 	.dw #0x04b0
      000067 00                     533 	.db #0x00	; 0
      000068rD3r01                  534 	.dw ___str_13
      00006A 0D                     535 	.db #0x0d	; 13
      00006B 96                     536 	.db #0x96	; 150
      00006C 0A                     537 	.db #0x0a	; 10
      00006D 88 13                  538 	.dw #0x1388
      00006F 00                     539 	.db #0x00	; 0
      000070rDCr01                  540 	.dw ___str_14
      000072 0E                     541 	.db #0x0e	; 14
      000073 C8                     542 	.db #0xc8	; 200
      000074 14                     543 	.db #0x14	; 20
      000075 10 27                  544 	.dw #0x2710
      000077 00                     545 	.db #0x00	; 0
      000078rE7r01                  546 	.dw ___str_15
      00007A 0F                     547 	.db #0x0f	; 15
      00007B FA                     548 	.db #0xfa	; 250
      00007C 1E                     549 	.db #0x1e	; 30
      00007D 98 3A                  550 	.dw #0x3a98
      00007F 00                     551 	.db #0x00	; 0
      000080rF2r01                  552 	.dw ___str_16
      000082 10                     553 	.db #0x10	; 16
      000083 50                     554 	.db #0x50	; 80	'P'
      000084 0A                     555 	.db #0x0a	; 10
      000085 D0 07                  556 	.dw #0x07d0
      000087 00                     557 	.db #0x00	; 0
      000088rFAr01                  558 	.dw ___str_17
      00008A 11                     559 	.db #0x11	; 17
      00008B 50                     560 	.db #0x50	; 80	'P'
      00008C 0A                     561 	.db #0x0a	; 10
      00008D 88 13                  562 	.dw #0x1388
      00008F 00                     563 	.db #0x00	; 0
      000090rFFr01                  564 	.dw ___str_18
      000092 12                     565 	.db #0x12	; 18
      000093 A0                     566 	.db #0xa0	; 160
      000094 0A                     567 	.db #0x0a	; 10
      000095 10 27                  568 	.dw #0x2710
      000097 00                     569 	.db #0x00	; 0
      000098r07r02                  570 	.dw ___str_19
      00009A 14                     571 	.db #0x14	; 20
      00009B 00                     572 	.db #0x00	; 0
      00009C 00                     573 	.db #0x00	; 0
      00009D 00 00                  574 	.dw #0x0000
      00009F 00                     575 	.db #0x00	; 0
      0000A0r0Cr02                  576 	.dw ___str_20
      0000A2 15                     577 	.db #0x15	; 21
      0000A3 00                     578 	.db #0x00	; 0
      0000A4 00                     579 	.db #0x00	; 0
      0000A5 00 00                  580 	.dw #0x0000
      0000A7 00                     581 	.db #0x00	; 0
      0000A8r10r02                  582 	.dw ___str_21
      0000AA 1E                     583 	.db #0x1e	; 30
      0000AB 40                     584 	.db #0x40	; 64
      0000AC 00                     585 	.db #0x00	; 0
      0000AD 00 00                  586 	.dw #0x0000
      0000AF 00                     587 	.db #0x00	; 0
      0000B0r16r02                  588 	.dw ___str_22
      0000B2 1F                     589 	.db #0x1f	; 31
      0000B3 40                     590 	.db #0x40	; 64
      0000B4 00                     591 	.db #0x00	; 0
      0000B5 00 00                  592 	.dw #0x0000
      0000B7 00                     593 	.db #0x00	; 0
      0000B8r1Fr02                  594 	.dw ___str_23
      0000BA 20                     595 	.db #0x20	; 32
      0000BB 40                     596 	.db #0x40	; 64
      0000BC 00                     597 	.db #0x00	; 0
      0000BD 00 00                  598 	.dw #0x0000
      0000BF 00                     599 	.db #0x00	; 0
                                    600 	.area _CABS (ABS)
