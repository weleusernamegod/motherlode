                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module gameloop
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _game_loop
                                     12 	.globl _draw_hull
                                     13 	.globl _draw_fuel
                                     14 	.globl _draw_cargo
                                     15 	.globl _draw_depth
                                     16 	.globl _clear_4bkg_tiles
                                     17 	.globl _spawn_bkg_row
                                     18 	.globl _read_buttons
                                     19 	.globl _calculate_cargo
                                     20 	.globl _update_inventory
                                     21 	.globl _check_game_over
                                     22 	.globl _check_enter_buildings
                                     23 	.globl _update_fuel
                                     24 	.globl _check_fuel
                                     25 	.globl _check_hull
                                     26 	.globl _calculate_falldamage
                                     27 	.globl _initiate_movement
                                     28 	.globl _update_movement
                                     29 	.globl _check_surroundings
                                     30 	.globl _wait_vbl_done
                                     31 ;--------------------------------------------------------
                                     32 ; special function registers
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _DATA
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _INITIALIZED
                                     42 ;--------------------------------------------------------
                                     43 ; absolute external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area _DABS (ABS)
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _GSINIT
                                     51 	.area _GSFINAL
                                     52 	.area _GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _HOME
                                     57 	.area _HOME
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area _CODE
                                     62 ;src/gameloop.c:18: void game_loop(void) {
                                     63 ;	---------------------------------
                                     64 ; Function game_loop
                                     65 ; ---------------------------------
      000000                         66 _game_loop::
                                     67 ;src/gameloop.c:20: read_buttons();
      000000 CDr00r00         [24]   68 	call	_read_buttons
                                     69 ;src/gameloop.c:21: check_surroundings();
      000003 CDr00r00         [24]   70 	call	_check_surroundings
                                     71 ;src/gameloop.c:23: if (animation_frames_left == 0) {
      000006 FAr00r00         [16]   72 	ld	a, (#_animation_frames_left)
      000009 B7               [ 4]   73 	or	a, a
      00000A 20 03            [12]   74 	jr	NZ, 00102$
                                     75 ;src/gameloop.c:24: initiate_movement();
      00000C CDr00r00         [24]   76 	call	_initiate_movement
      00000F                         77 00102$:
                                     78 ;src/gameloop.c:27: update_movement();
      00000F CDr00r00         [24]   79 	call	_update_movement
                                     80 ;src/gameloop.c:29: if (tile_mined == TRUE) {
      000012 FAr00r00         [16]   81 	ld	a, (#_tile_mined)
      000015 3D               [ 4]   82 	dec	a
      000016 20 1C            [12]   83 	jr	NZ, 00104$
                                     84 ;src/gameloop.c:30: update_inventory();
      000018 CDr00r00         [24]   85 	call	_update_inventory
                                     86 ;src/gameloop.c:31: clear_4bkg_tiles(level_array, width, depth);
      00001B FAr00r00         [16]   87 	ld	a, (#_depth)
      00001E F5               [16]   88 	push	af
      00001F 33               [ 8]   89 	inc	sp
      000020 FAr00r00         [16]   90 	ld	a, (#_width)
      000023 11r00r00         [12]   91 	ld	de, #_level_array
      000026 CDr00r00         [24]   92 	call	_clear_4bkg_tiles
                                     93 ;src/gameloop.c:32: calculate_cargo();
      000029 CDr00r00         [24]   94 	call	_calculate_cargo
                                     95 ;src/gameloop.c:33: draw_cargo();
      00002C CDr00r00         [24]   96 	call	_draw_cargo
                                     97 ;src/gameloop.c:34: tile_mined = FALSE;
      00002F 21r00r00         [12]   98 	ld	hl, #_tile_mined
      000032 36 00            [12]   99 	ld	(hl), #0x00
      000034                        100 00104$:
                                    101 ;src/gameloop.c:37: update_fuel();
      000034 CDr00r00         [24]  102 	call	_update_fuel
                                    103 ;src/gameloop.c:38: draw_fuel();
      000037 CDr00r00         [24]  104 	call	_draw_fuel
                                    105 ;src/gameloop.c:39: draw_hull();
      00003A CDr00r00         [24]  106 	call	_draw_hull
                                    107 ;src/gameloop.c:40: calculate_falldamage();
      00003D CDr00r00         [24]  108 	call	_calculate_falldamage
                                    109 ;src/gameloop.c:41: check_hull();
      000040 CDr00r00         [24]  110 	call	_check_hull
                                    111 ;src/gameloop.c:42: check_fuel();
      000043 CDr00r00         [24]  112 	call	_check_fuel
                                    113 ;src/gameloop.c:43: check_game_over();
      000046 CDr00r00         [24]  114 	call	_check_game_over
                                    115 ;src/gameloop.c:45: if (prev_depth != depth) {
      000049 FAr00r00         [16]  116 	ld	a, (#_prev_depth)
      00004C 21r00r00         [12]  117 	ld	hl, #_depth
      00004F 96               [ 8]  118 	sub	a, (hl)
      000050 28 06            [12]  119 	jr	Z, 00106$
                                    120 ;src/gameloop.c:46: spawn_bkg_row();
      000052 CDr00r00         [24]  121 	call	_spawn_bkg_row
                                    122 ;src/gameloop.c:47: draw_depth();
      000055 CDr00r00         [24]  123 	call	_draw_depth
      000058                        124 00106$:
                                    125 ;src/gameloop.c:50: check_enter_buildings();
      000058 CDr00r00         [24]  126 	call	_check_enter_buildings
                                    127 ;src/gameloop.c:53: prev_buttons = buttons;
      00005B FAr00r00         [16]  128 	ld	a, (#_buttons)
      00005E EAr00r00         [16]  129 	ld	(#_prev_buttons),a
                                    130 ;src/gameloop.c:54: prev_depth = depth;
      000061 FAr00r00         [16]  131 	ld	a, (#_depth)
      000064 EAr00r00         [16]  132 	ld	(#_prev_depth),a
                                    133 ;src/gameloop.c:55: prev_width = width;
      000067 FAr00r00         [16]  134 	ld	a, (#_width)
      00006A 21r00r00         [12]  135 	ld	hl, #_prev_width
      00006D 77               [ 8]  136 	ld	(hl), a
                                    137 ;src/gameloop.c:57: wait_vbl_done();
                                    138 ;src/gameloop.c:58: }
      00006E C3r00r00         [16]  139 	jp	_wait_vbl_done
                                    140 	.area _CODE
                                    141 	.area _INITIALIZER
                                    142 	.area _CABS (ABS)
