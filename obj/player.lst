                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _reset_player
                                     12 	.globl _check_game_over
                                     13 	.globl _check_enter_buildings
                                     14 	.globl _update_fuel
                                     15 	.globl _check_fuel
                                     16 	.globl _check_hull
                                     17 	.globl _calculate_falldamage
                                     18 	.globl _initiate_movement
                                     19 	.globl _move
                                     20 	.globl _move_down
                                     21 	.globl _move_up
                                     22 	.globl _move_right
                                     23 	.globl _move_left
                                     24 	.globl _calculate_speed
                                     25 	.globl _calculate_frames
                                     26 	.globl _update_movement
                                     27 	.globl _draw_metasprite
                                     28 	.globl _metasprite_rover
                                     29 	.globl _metasprite_drill_vertical
                                     30 	.globl _metasprite_drill_horizontal
                                     31 	.globl _check_surroundings
                                     32 	.globl _init_speed
                                     33 	.globl _init_character
                                     34 	.globl b___func_bank_player
                                     35 	.globl ___func_bank_player
                                     36 	.globl _abs
                                     37 	.globl _player
                                     38 	.globl _drill_vertical_metasprite
                                     39 	.globl _drill_horizontal_metasprite
                                     40 	.globl _rover_metasprite
                                     41 ;--------------------------------------------------------
                                     42 ; special function registers
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _DATA
                           000000    48 G$player$0_0$0==.
      000000                         49 _player::
      000000                         50 	.ds 348
                                     51 ;--------------------------------------------------------
                                     52 ; ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _INITIALIZED
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE_1
                           000000    75 	G$__func_bank_player$0$0	= .
                                     76 	.globl	G$__func_bank_player$0$0
                           000000    77 	C$player.c$21$0_0$209	= .
                                     78 	.globl	C$player.c$21$0_0$209
                                     79 ;src/player.c:21: BANKREF(bank_player)
                                     80 ;	---------------------------------
                                     81 ; Function __func_bank_player
                                     82 ; ---------------------------------
                           000001    83 	b___func_bank_player	= 1
      000000                         84 ___func_bank_player::
                                     85 	.local b___func_bank_player 
                           000001    86 	___bank_bank_player = b___func_bank_player 
                                     87 	.globl ___bank_bank_player 
                           000000    88 	G$init_character$0$0	= .
                                     89 	.globl	G$init_character$0$0
                           000000    90 	C$player.c$46$1_0$211	= .
                                     91 	.globl	C$player.c$46$1_0$211
                                     92 ;src/player.c:46: void init_character(void){
                                     93 ;	---------------------------------
                                     94 ; Function init_character
                                     95 ; ---------------------------------
      000000                         96 _init_character::
                           000000    97 	C$player.c$47$1_0$211	= .
                                     98 	.globl	C$player.c$47$1_0$211
                                     99 ;src/player.c:47: direction_prev = RIGHT;    // start with the rover facing right
      000000 21r00r00         [12]  100 	ld	hl, #_direction_prev
      000003 36 02            [12]  101 	ld	(hl), #0x02
                           000005   102 	C$player.c$48$1_0$211	= .
                                    103 	.globl	C$player.c$48$1_0$211
                                    104 ;src/player.c:48: prev_depth = depth;
      000005 FAr00r00         [16]  105 	ld	a, (#_depth)
      000008 EAr00r00         [16]  106 	ld	(#_prev_depth),a
                           00000B   107 	C$player.c$49$1_0$211	= .
                                    108 	.globl	C$player.c$49$1_0$211
                                    109 ;src/player.c:49: width_pixel.h = 16 + ((width - width_offset) * 16);
      00000B 01r01r00         [12]  110 	ld	bc, #_width_pixel+1
      00000E FAr00r00         [16]  111 	ld	a, (#_width)
      000011 21r00r00         [12]  112 	ld	hl, #_width_offset
      000014 96               [ 8]  113 	sub	a, (hl)
      000015 CB 37            [ 8]  114 	swap	a
      000017 E6 F0            [ 8]  115 	and	a, #0xf0
      000019 C6 10            [ 8]  116 	add	a, #0x10
      00001B 02               [ 8]  117 	ld	(bc), a
                           00001C   118 	C$player.c$50$1_0$211	= .
                                    119 	.globl	C$player.c$50$1_0$211
                                    120 ;src/player.c:50: depth_pixel.h = 16 + 8 + (depth - depth_offset) * 16;
      00001C 01r01r00         [12]  121 	ld	bc, #_depth_pixel+1
      00001F FAr00r00         [16]  122 	ld	a, (#_depth)
      000022 21r00r00         [12]  123 	ld	hl, #_depth_offset
      000025 96               [ 8]  124 	sub	a, (hl)
      000026 CB 37            [ 8]  125 	swap	a
      000028 E6 F0            [ 8]  126 	and	a, #0xf0
      00002A C6 18            [ 8]  127 	add	a, #0x18
      00002C 02               [ 8]  128 	ld	(bc), a
                           00002D   129 	C$player.c$51$1_0$211	= .
                                    130 	.globl	C$player.c$51$1_0$211
                                    131 ;src/player.c:51: scroll_x.h = width_offset * 16;
      00002D 01r01r00         [12]  132 	ld	bc, #_scroll_x+1
      000030 FAr00r00         [16]  133 	ld	a, (#_width_offset)
      000033 CB 37            [ 8]  134 	swap	a
      000035 E6 F0            [ 8]  135 	and	a, #0xf0
      000037 02               [ 8]  136 	ld	(bc), a
                           000038   137 	C$player.c$52$1_0$211	= .
                                    138 	.globl	C$player.c$52$1_0$211
                                    139 ;src/player.c:52: scroll_y.h = depth_offset * 16;
      000038 01r01r00         [12]  140 	ld	bc, #_scroll_y+1
      00003B FAr00r00         [16]  141 	ld	a, (#_depth_offset)
      00003E CB 37            [ 8]  142 	swap	a
      000040 E6 F0            [ 8]  143 	and	a, #0xf0
      000042 02               [ 8]  144 	ld	(bc), a
                           000043   145 	C$player.c$53$1_0$211	= .
                                    146 	.globl	C$player.c$53$1_0$211
                                    147 ;src/player.c:53: }
                           000043   148 	C$player.c$53$1_0$211	= .
                                    149 	.globl	C$player.c$53$1_0$211
                           000043   150 	XG$init_character$0$0	= .
                                    151 	.globl	XG$init_character$0$0
      000043 C9               [16]  152 	ret
                           000044   153 G$rover_metasprite$0_0$0 == .
      000044                        154 _rover_metasprite:
      000044 F8                     155 	.db #0xf8	; -8
      000045 F8                     156 	.db #0xf8	; -8
      000046 01                     157 	.db #0x01	; 1
      000047 00                     158 	.db #0x00	; 0
      000048 00                     159 	.db #0x00	;  0
      000049 08                     160 	.db #0x08	;  8
      00004A 02                     161 	.db #0x02	; 2
      00004B 00                     162 	.db #0x00	; 0
      00004C 08                     163 	.db #0x08	;  8
      00004D F8                     164 	.db #0xf8	; -8
      00004E 03                     165 	.db #0x03	; 3
      00004F 00                     166 	.db #0x00	; 0
      000050 00                     167 	.db #0x00	;  0
      000051 08                     168 	.db #0x08	;  8
      000052 04                     169 	.db #0x04	; 4
      000053 00                     170 	.db #0x00	; 0
      000054 80                     171 	.db #0x80	; -128
      000055 00                     172 	.db #0x00	;  0
      000056 00                     173 	.db #0x00	; 0
      000057 00                     174 	.db #0x00	; 0
                           000058   175 G$drill_horizontal_metasprite$0_0$0 == .
      000058                        176 _drill_horizontal_metasprite:
      000058 F8                     177 	.db #0xf8	; -8
      000059 F0                     178 	.db #0xf0	; -16
      00005A 0B                     179 	.db #0x0b	; 11
      00005B 00                     180 	.db #0x00	; 0
      00005C 08                     181 	.db #0x08	;  8
      00005D 00                     182 	.db #0x00	;  0
      00005E 0C                     183 	.db #0x0c	; 12
      00005F 00                     184 	.db #0x00	; 0
      000060 80                     185 	.db #0x80	; -128
      000061 00                     186 	.db #0x00	;  0
      000062 00                     187 	.db #0x00	; 0
      000063 00                     188 	.db #0x00	; 0
                           000064   189 G$drill_vertical_metasprite$0_0$0 == .
      000064                        190 _drill_vertical_metasprite:
      000064 08                     191 	.db #0x08	;  8
      000065 F8                     192 	.db #0xf8	; -8
      000066 0F                     193 	.db #0x0f	; 15
      000067 00                     194 	.db #0x00	; 0
      000068 00                     195 	.db #0x00	;  0
      000069 08                     196 	.db #0x08	;  8
      00006A 10                     197 	.db #0x10	; 16
      00006B 00                     198 	.db #0x00	; 0
      00006C 80                     199 	.db #0x80	; -128
      00006D 00                     200 	.db #0x00	;  0
      00006E 00                     201 	.db #0x00	; 0
      00006F 00                     202 	.db #0x00	; 0
                           000070   203 	G$init_speed$0$0	= .
                                    204 	.globl	G$init_speed$0$0
                           000070   205 	C$player.c$55$1_0$213	= .
                                    206 	.globl	C$player.c$55$1_0$213
                                    207 ;src/player.c:55: void init_speed(void){
                                    208 ;	---------------------------------
                                    209 ; Function init_speed
                                    210 ; ---------------------------------
      000070                        211 _init_speed::
                           000070   212 	C$player.c$56$1_0$213	= .
                                    213 	.globl	C$player.c$56$1_0$213
                                    214 ;src/player.c:56: move_x_per_frame.w = 0;
      000070 21r00r00         [12]  215 	ld	hl, #_move_x_per_frame
      000073 AF               [ 4]  216 	xor	a, a
      000074 22               [ 8]  217 	ld	(hl+), a
      000075 77               [ 8]  218 	ld	(hl), a
                           000076   219 	C$player.c$57$1_0$213	= .
                                    220 	.globl	C$player.c$57$1_0$213
                                    221 ;src/player.c:57: move_y_per_frame.w = 0;
      000076 21r00r00         [12]  222 	ld	hl, #_move_y_per_frame
      000079 AF               [ 4]  223 	xor	a, a
      00007A 22               [ 8]  224 	ld	(hl+), a
      00007B 77               [ 8]  225 	ld	(hl), a
                           00007C   226 	C$player.c$58$1_0$213	= .
                                    227 	.globl	C$player.c$58$1_0$213
                                    228 ;src/player.c:58: scroll_x_per_frame.w = 0;
      00007C 21r00r00         [12]  229 	ld	hl, #_scroll_x_per_frame
      00007F AF               [ 4]  230 	xor	a, a
      000080 22               [ 8]  231 	ld	(hl+), a
      000081 77               [ 8]  232 	ld	(hl), a
                           000082   233 	C$player.c$59$1_0$213	= .
                                    234 	.globl	C$player.c$59$1_0$213
                                    235 ;src/player.c:59: scroll_y_per_frame.w = 0;
      000082 21r00r00         [12]  236 	ld	hl, #_scroll_y_per_frame
      000085 AF               [ 4]  237 	xor	a, a
      000086 22               [ 8]  238 	ld	(hl+), a
      000087 77               [ 8]  239 	ld	(hl), a
                           000088   240 	C$player.c$60$1_0$213	= .
                                    241 	.globl	C$player.c$60$1_0$213
                                    242 ;src/player.c:60: scroll_x.w = 0;
      000088 21r00r00         [12]  243 	ld	hl, #_scroll_x
      00008B AF               [ 4]  244 	xor	a, a
      00008C 22               [ 8]  245 	ld	(hl+), a
      00008D 77               [ 8]  246 	ld	(hl), a
                           00008E   247 	C$player.c$61$1_0$213	= .
                                    248 	.globl	C$player.c$61$1_0$213
                                    249 ;src/player.c:61: scroll_y.w = 0;
      00008E 21r00r00         [12]  250 	ld	hl, #_scroll_y
      000091 AF               [ 4]  251 	xor	a, a
      000092 22               [ 8]  252 	ld	(hl+), a
      000093 77               [ 8]  253 	ld	(hl), a
                           000094   254 	C$player.c$62$1_0$213	= .
                                    255 	.globl	C$player.c$62$1_0$213
                                    256 ;src/player.c:62: }
                           000094   257 	C$player.c$62$1_0$213	= .
                                    258 	.globl	C$player.c$62$1_0$213
                           000094   259 	XG$init_speed$0$0	= .
                                    260 	.globl	XG$init_speed$0$0
      000094 C9               [16]  261 	ret
                           000095   262 	G$check_surroundings$0$0	= .
                                    263 	.globl	G$check_surroundings$0$0
                           000095   264 	C$player.c$64$1_0$215	= .
                                    265 	.globl	C$player.c$64$1_0$215
                                    266 ;src/player.c:64: void check_surroundings(void){
                                    267 ;	---------------------------------
                                    268 ; Function check_surroundings
                                    269 ; ---------------------------------
      000095                        270 _check_surroundings::
                           000095   271 	C$player.c$65$1_0$215	= .
                                    272 	.globl	C$player.c$65$1_0$215
                                    273 ;src/player.c:65: next_tile_down = level_array[depth + 1][width];
      000095 21r00r00         [12]  274 	ld	hl, #_depth
      000098 4E               [ 8]  275 	ld	c, (hl)
      000099 06 00            [ 8]  276 	ld	b, #0x00
      00009B 69               [ 4]  277 	ld	l, c
                                    278 ;	spillPairReg hl
                                    279 ;	spillPairReg hl
      00009C 60               [ 4]  280 	ld	h, b
                                    281 ;	spillPairReg hl
                                    282 ;	spillPairReg hl
      00009D 23               [ 8]  283 	inc	hl
      00009E 29               [ 8]  284 	add	hl, hl
      00009F 29               [ 8]  285 	add	hl, hl
      0000A0 29               [ 8]  286 	add	hl, hl
      0000A1 29               [ 8]  287 	add	hl, hl
      0000A2 11r00r00         [12]  288 	ld	de, #_level_array
      0000A5 19               [ 8]  289 	add	hl, de
      0000A6 E5               [16]  290 	push	hl
      0000A7 21r00r00         [12]  291 	ld	hl, #_width
      0000AA 5E               [ 8]  292 	ld	e, (hl)
      0000AB E1               [12]  293 	pop	hl
      0000AC 16 00            [ 8]  294 	ld	d, #0x00
      0000AE 19               [ 8]  295 	add	hl, de
      0000AF 7E               [ 8]  296 	ld	a, (hl)
      0000B0 EAr00r00         [16]  297 	ld	(#_next_tile_down),a
                           0000B3   298 	C$player.c$66$1_0$215	= .
                                    299 	.globl	C$player.c$66$1_0$215
                                    300 ;src/player.c:66: next_tile_up = level_array[depth - 1][width];
      0000B3 69               [ 4]  301 	ld	l, c
      0000B4 60               [ 4]  302 	ld	h, b
      0000B5 2B               [ 8]  303 	dec	hl
      0000B6 29               [ 8]  304 	add	hl, hl
      0000B7 29               [ 8]  305 	add	hl, hl
      0000B8 29               [ 8]  306 	add	hl, hl
      0000B9 29               [ 8]  307 	add	hl, hl
      0000BA D5               [16]  308 	push	de
      0000BB 11r00r00         [12]  309 	ld	de, #_level_array
      0000BE 19               [ 8]  310 	add	hl, de
      0000BF D1               [12]  311 	pop	de
      0000C0 16 00            [ 8]  312 	ld	d, #0x00
      0000C2 19               [ 8]  313 	add	hl, de
      0000C3 7E               [ 8]  314 	ld	a, (hl)
      0000C4 EAr00r00         [16]  315 	ld	(#_next_tile_up),a
                           0000C7   316 	C$player.c$67$1_0$215	= .
                                    317 	.globl	C$player.c$67$1_0$215
                                    318 ;src/player.c:67: next_tile_right = level_array[depth][width + 1];
      0000C7 69               [ 4]  319 	ld	l, c
      0000C8 60               [ 4]  320 	ld	h, b
      0000C9 29               [ 8]  321 	add	hl, hl
      0000CA 29               [ 8]  322 	add	hl, hl
      0000CB 29               [ 8]  323 	add	hl, hl
      0000CC 29               [ 8]  324 	add	hl, hl
      0000CD 7D               [ 4]  325 	ld	a, l
      0000CE C6r00            [ 8]  326 	add	a, #<(_level_array)
      0000D0 4F               [ 4]  327 	ld	c, a
      0000D1 7C               [ 4]  328 	ld	a, h
      0000D2 CEs00            [ 8]  329 	adc	a, #>(_level_array)
      0000D4 47               [ 4]  330 	ld	b, a
      0000D5 21r00r00         [12]  331 	ld	hl, #_width
      0000D8 5E               [ 8]  332 	ld	e, (hl)
      0000D9 6B               [ 4]  333 	ld	l, e
                                    334 ;	spillPairReg hl
                                    335 ;	spillPairReg hl
      0000DA 2C               [ 4]  336 	inc	l
      0000DB 26 00            [ 8]  337 	ld	h, #0x00
      0000DD 09               [ 8]  338 	add	hl, bc
      0000DE 7E               [ 8]  339 	ld	a, (hl)
      0000DF EAr00r00         [16]  340 	ld	(#_next_tile_right),a
                           0000E2   341 	C$player.c$68$1_0$215	= .
                                    342 	.globl	C$player.c$68$1_0$215
                                    343 ;src/player.c:68: next_tile_left = level_array[depth][width - 1];
      0000E2 1D               [ 4]  344 	dec	e
      0000E3 6B               [ 4]  345 	ld	l, e
      0000E4 26 00            [ 8]  346 	ld	h, #0x00
      0000E6 09               [ 8]  347 	add	hl, bc
      0000E7 7E               [ 8]  348 	ld	a, (hl)
      0000E8 EAr00r00         [16]  349 	ld	(#_next_tile_left),a
                           0000EB   350 	C$player.c$69$1_0$215	= .
                                    351 	.globl	C$player.c$69$1_0$215
                                    352 ;src/player.c:69: }
                           0000EB   353 	C$player.c$69$1_0$215	= .
                                    354 	.globl	C$player.c$69$1_0$215
                           0000EB   355 	XG$check_surroundings$0$0	= .
                                    356 	.globl	XG$check_surroundings$0$0
      0000EB C9               [16]  357 	ret
                           0000EC   358 	G$metasprite_drill_horizontal$0$0	= .
                                    359 	.globl	G$metasprite_drill_horizontal$0$0
                           0000EC   360 	C$player.c$71$1_0$217	= .
                                    361 	.globl	C$player.c$71$1_0$217
                                    362 ;src/player.c:71: void metasprite_drill_horizontal(char direction){
                                    363 ;	---------------------------------
                                    364 ; Function metasprite_drill_horizontal
                                    365 ; ---------------------------------
      0000EC                        366 _metasprite_drill_horizontal::
      0000EC 4F               [ 4]  367 	ld	c, a
                                    368 ;src/player.c:72: hide_metasprite(drill_vertical_metasprite, 15);
                                    369 ;/usr/local/opt/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      0000ED 21r00r00         [12]  370 	ld	hl, #___current_metasprite
      0000F0 36r64            [12]  371 	ld	(hl), #<(_drill_vertical_metasprite)
      0000F2 23               [ 8]  372 	inc	hl
      0000F3 36s00            [12]  373 	ld	(hl), #>(_drill_vertical_metasprite)
                                    374 ;/usr/local/opt/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      0000F5 C5               [16]  375 	push	bc
      0000F6 3E 0F            [ 8]  376 	ld	a, #0x0f
      0000F8 CDr00r00         [24]  377 	call	___hide_metasprite
      0000FB C1               [12]  378 	pop	bc
                           0000FC   379 	C$player.c$73$1_0$217	= .
                                    380 	.globl	C$player.c$73$1_0$217
                                    381 ;src/player.c:73: if (direction == LEFT) move_metasprite_ex (drill_horizontal_metasprite,0,0,11,width_pixel.h,depth_pixel.h);
      0000FC 79               [ 4]  382 	ld	a, c
      0000FD 3D               [ 4]  383 	dec	a
      0000FE 20 27            [12]  384 	jr	NZ, 00102$
      000100 21r01r00         [12]  385 	ld	hl, #(_depth_pixel + 1)
      000103 46               [ 8]  386 	ld	b, (hl)
      000104 11r01r00         [12]  387 	ld	de, #_width_pixel+1
      000107 1A               [ 8]  388 	ld	a, (de)
      000108 5F               [ 4]  389 	ld	e, a
                                    390 ;/usr/local/opt/gbdk/include/gb/metasprites.h:151: __current_metasprite = metasprite;
      000109 21r00r00         [12]  391 	ld	hl, #___current_metasprite
      00010C 36r58            [12]  392 	ld	(hl), #<(_drill_horizontal_metasprite)
      00010E 23               [ 8]  393 	inc	hl
      00010F 36s00            [12]  394 	ld	(hl), #>(_drill_horizontal_metasprite)
                                    395 ;/usr/local/opt/gbdk/include/gb/metasprites.h:152: __current_base_tile = base_tile;
      000111 21r00r00         [12]  396 	ld	hl, #___current_base_tile
      000114 36 00            [12]  397 	ld	(hl), #0x00
                                    398 ;/usr/local/opt/gbdk/include/gb/metasprites.h:153: __current_base_prop = base_prop;
      000116 21r00r00         [12]  399 	ld	hl, #___current_base_prop
      000119 36 00            [12]  400 	ld	(hl), #0x00
                                    401 ;/usr/local/opt/gbdk/include/gb/metasprites.h:154: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      00011B 68               [ 4]  402 	ld	l, b
                                    403 ;	spillPairReg hl
                                    404 ;	spillPairReg hl
                                    405 ;	spillPairReg hl
                                    406 ;	spillPairReg hl
      00011C AF               [ 4]  407 	xor	a, a
      00011D B3               [ 4]  408 	or	a, e
      00011E 5F               [ 4]  409 	ld	e, a
      00011F 55               [ 4]  410 	ld	d, l
      000120 C5               [16]  411 	push	bc
      000121 3E 0B            [ 8]  412 	ld	a, #0x0b
      000123 CDr00r00         [24]  413 	call	___move_metasprite
      000126 C1               [12]  414 	pop	bc
                           000127   415 	C$player.c$73$1_0$217	= .
                                    416 	.globl	C$player.c$73$1_0$217
                                    417 ;src/player.c:73: if (direction == LEFT) move_metasprite_ex (drill_horizontal_metasprite,0,0,11,width_pixel.h,depth_pixel.h);
      000127                        418 00102$:
                           000127   419 	C$player.c$74$1_0$217	= .
                                    420 	.globl	C$player.c$74$1_0$217
                                    421 ;src/player.c:74: if (direction == RIGHT) move_metasprite_flipx (drill_horizontal_metasprite,0,0,11,width_pixel.h,depth_pixel.h);
      000127 79               [ 4]  422 	ld	a, c
      000128 D6 02            [ 8]  423 	sub	a, #0x02
      00012A C0               [20]  424 	ret	NZ
      00012B 21r01r00         [12]  425 	ld	hl, #(_depth_pixel + 1)
      00012E 46               [ 8]  426 	ld	b, (hl)
      00012F 21r01r00         [12]  427 	ld	hl, #(_width_pixel + 1)
      000132 4E               [ 8]  428 	ld	c, (hl)
                                    429 ;/usr/local/opt/gbdk/include/gb/metasprites.h:191: __current_metasprite = metasprite;
      000133 21r00r00         [12]  430 	ld	hl, #___current_metasprite
      000136 36r58            [12]  431 	ld	(hl), #<(_drill_horizontal_metasprite)
      000138 23               [ 8]  432 	inc	hl
      000139 36s00            [12]  433 	ld	(hl), #>(_drill_horizontal_metasprite)
                                    434 ;/usr/local/opt/gbdk/include/gb/metasprites.h:192: __current_base_tile = base_tile;
      00013B 21r00r00         [12]  435 	ld	hl, #___current_base_tile
      00013E 36 00            [12]  436 	ld	(hl), #0x00
                                    437 ;/usr/local/opt/gbdk/include/gb/metasprites.h:193: __current_base_prop = base_prop;
      000140 21r00r00         [12]  438 	ld	hl, #___current_base_prop
      000143 36 00            [12]  439 	ld	(hl), #0x00
                                    440 ;/usr/local/opt/gbdk/include/gb/metasprites.h:194: return __move_metasprite_flipx(base_sprite, (y << 8) | (uint8_t)(x - 8u));
      000145 50               [ 4]  441 	ld	d, b
      000146 1E 00            [ 8]  442 	ld	e, #0x00
      000148 79               [ 4]  443 	ld	a, c
      000149 C6 F8            [ 8]  444 	add	a, #0xf8
      00014B 0E 00            [ 8]  445 	ld	c, #0x00
      00014D B3               [ 4]  446 	or	a, e
      00014E 5F               [ 4]  447 	ld	e, a
      00014F 3E 0B            [ 8]  448 	ld	a, #0x0b
                           000151   449 	C$player.c$74$1_0$217	= .
                                    450 	.globl	C$player.c$74$1_0$217
                                    451 ;src/player.c:74: if (direction == RIGHT) move_metasprite_flipx (drill_horizontal_metasprite,0,0,11,width_pixel.h,depth_pixel.h);
                           000151   452 	C$player.c$75$1_0$217	= .
                                    453 	.globl	C$player.c$75$1_0$217
                                    454 ;src/player.c:75: }
                           000151   455 	C$player.c$75$1_0$217	= .
                                    456 	.globl	C$player.c$75$1_0$217
                           000151   457 	XG$metasprite_drill_horizontal$0$0	= .
                                    458 	.globl	XG$metasprite_drill_horizontal$0$0
      000151 C3r00r00         [16]  459 	jp	___move_metasprite_flipx
                           000154   460 	G$metasprite_drill_vertical$0$0	= .
                                    461 	.globl	G$metasprite_drill_vertical$0$0
                           000154   462 	C$player.c$76$1_0$228	= .
                                    463 	.globl	C$player.c$76$1_0$228
                                    464 ;src/player.c:76: void metasprite_drill_vertical(char direction){
                                    465 ;	---------------------------------
                                    466 ; Function metasprite_drill_vertical
                                    467 ; ---------------------------------
      000154                        468 _metasprite_drill_vertical::
      000154 4F               [ 4]  469 	ld	c, a
                                    470 ;src/player.c:77: hide_metasprite(drill_horizontal_metasprite, 11);
                                    471 ;/usr/local/opt/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      000155 21r00r00         [12]  472 	ld	hl, #___current_metasprite
      000158 36r58            [12]  473 	ld	(hl), #<(_drill_horizontal_metasprite)
      00015A 23               [ 8]  474 	inc	hl
      00015B 36s00            [12]  475 	ld	(hl), #>(_drill_horizontal_metasprite)
                                    476 ;/usr/local/opt/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      00015D C5               [16]  477 	push	bc
      00015E 3E 0B            [ 8]  478 	ld	a, #0x0b
      000160 CDr00r00         [24]  479 	call	___hide_metasprite
      000163 C1               [12]  480 	pop	bc
                           000164   481 	C$player.c$78$1_0$228	= .
                                    482 	.globl	C$player.c$78$1_0$228
                                    483 ;src/player.c:78: if (direction == DOWN) move_metasprite_ex(drill_vertical_metasprite,0,0,15,width_pixel.h,depth_pixel.h);
      000164 79               [ 4]  484 	ld	a, c
      000165 D6 04            [ 8]  485 	sub	a, #0x04
      000167 C0               [20]  486 	ret	NZ
      000168 21r01r00         [12]  487 	ld	hl, #(_depth_pixel + 1)
      00016B 4E               [ 8]  488 	ld	c, (hl)
      00016C 11r01r00         [12]  489 	ld	de, #_width_pixel+1
      00016F 1A               [ 8]  490 	ld	a, (de)
      000170 5F               [ 4]  491 	ld	e, a
                                    492 ;/usr/local/opt/gbdk/include/gb/metasprites.h:151: __current_metasprite = metasprite;
      000171 21r00r00         [12]  493 	ld	hl, #___current_metasprite
      000174 36r64            [12]  494 	ld	(hl), #<(_drill_vertical_metasprite)
      000176 23               [ 8]  495 	inc	hl
      000177 36s00            [12]  496 	ld	(hl), #>(_drill_vertical_metasprite)
                                    497 ;/usr/local/opt/gbdk/include/gb/metasprites.h:152: __current_base_tile = base_tile;
      000179 21r00r00         [12]  498 	ld	hl, #___current_base_tile
      00017C 36 00            [12]  499 	ld	(hl), #0x00
                                    500 ;/usr/local/opt/gbdk/include/gb/metasprites.h:153: __current_base_prop = base_prop;
      00017E 21r00r00         [12]  501 	ld	hl, #___current_base_prop
                                    502 ;/usr/local/opt/gbdk/include/gb/metasprites.h:154: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      000181 36 00            [12]  503 	ld	(hl), #0x00
      000183 7E               [ 8]  504 	ld	a, (hl)
      000184 47               [ 4]  505 	ld	b,a
      000185 B3               [ 4]  506 	or	a, e
      000186 5F               [ 4]  507 	ld	e, a
      000187 51               [ 4]  508 	ld	d, c
      000188 3E 0F            [ 8]  509 	ld	a, #0x0f
                           00018A   510 	C$player.c$78$1_0$228	= .
                                    511 	.globl	C$player.c$78$1_0$228
                                    512 ;src/player.c:78: if (direction == DOWN) move_metasprite_ex(drill_vertical_metasprite,0,0,15,width_pixel.h,depth_pixel.h);
                           00018A   513 	C$player.c$79$1_0$228	= .
                                    514 	.globl	C$player.c$79$1_0$228
                                    515 ;src/player.c:79: }
                           00018A   516 	C$player.c$79$1_0$228	= .
                                    517 	.globl	C$player.c$79$1_0$228
                           00018A   518 	XG$metasprite_drill_vertical$0$0	= .
                                    519 	.globl	XG$metasprite_drill_vertical$0$0
      00018A C3r00r00         [16]  520 	jp	___move_metasprite
                           00018D   521 	G$metasprite_rover$0$0	= .
                                    522 	.globl	G$metasprite_rover$0$0
                           00018D   523 	C$player.c$80$1_0$236	= .
                                    524 	.globl	C$player.c$80$1_0$236
                                    525 ;src/player.c:80: void metasprite_rover(char direction){
                                    526 ;	---------------------------------
                                    527 ; Function metasprite_rover
                                    528 ; ---------------------------------
      00018D                        529 _metasprite_rover::
      00018D 3B               [ 8]  530 	dec	sp
      00018E F8 00            [12]  531 	ldhl	sp,	#0
      000190 77               [ 8]  532 	ld	(hl), a
                                    533 ;src/player.c:81: hide_metasprite(drill_horizontal_metasprite, 15);
                                    534 ;/usr/local/opt/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      000191 21r00r00         [12]  535 	ld	hl, #___current_metasprite
      000194 36r58            [12]  536 	ld	(hl), #<(_drill_horizontal_metasprite)
      000196 23               [ 8]  537 	inc	hl
      000197 36s00            [12]  538 	ld	(hl), #>(_drill_horizontal_metasprite)
                                    539 ;/usr/local/opt/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      000199 3E 0F            [ 8]  540 	ld	a, #0x0f
      00019B CDr00r00         [24]  541 	call	___hide_metasprite
                                    542 ;src/player.c:82: hide_metasprite(drill_horizontal_metasprite, 11);
                                    543 ;/usr/local/opt/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      00019E 21r00r00         [12]  544 	ld	hl, #___current_metasprite
      0001A1 36r58            [12]  545 	ld	(hl), #<(_drill_horizontal_metasprite)
      0001A3 23               [ 8]  546 	inc	hl
      0001A4 36s00            [12]  547 	ld	(hl), #>(_drill_horizontal_metasprite)
                                    548 ;/usr/local/opt/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      0001A6 3E 0B            [ 8]  549 	ld	a, #0x0b
      0001A8 CDr00r00         [24]  550 	call	___hide_metasprite
                           0001AB   551 	C$player.c$83$1_0$236	= .
                                    552 	.globl	C$player.c$83$1_0$236
                                    553 ;src/player.c:83: if (direction == LEFT) move_metasprite_ex(rover_metasprite,0,0,0,width_pixel.h,depth_pixel.h);
      0001AB F8 00            [12]  554 	ldhl	sp,	#0
      0001AD 7E               [ 8]  555 	ld	a, (hl)
      0001AE 3D               [ 4]  556 	dec	a
      0001AF 20 22            [12]  557 	jr	NZ, 00102$
      0001B1 21r01r00         [12]  558 	ld	hl, #(_depth_pixel + 1)
      0001B4 4E               [ 8]  559 	ld	c, (hl)
      0001B5 11r01r00         [12]  560 	ld	de, #_width_pixel+1
      0001B8 1A               [ 8]  561 	ld	a, (de)
      0001B9 5F               [ 4]  562 	ld	e, a
                                    563 ;/usr/local/opt/gbdk/include/gb/metasprites.h:151: __current_metasprite = metasprite;
      0001BA 21r00r00         [12]  564 	ld	hl, #___current_metasprite
      0001BD 36r44            [12]  565 	ld	(hl), #<(_rover_metasprite)
      0001BF 23               [ 8]  566 	inc	hl
      0001C0 36s00            [12]  567 	ld	(hl), #>(_rover_metasprite)
                                    568 ;/usr/local/opt/gbdk/include/gb/metasprites.h:152: __current_base_tile = base_tile;
      0001C2 21r00r00         [12]  569 	ld	hl, #___current_base_tile
      0001C5 36 00            [12]  570 	ld	(hl), #0x00
                                    571 ;/usr/local/opt/gbdk/include/gb/metasprites.h:153: __current_base_prop = base_prop;
      0001C7 21r00r00         [12]  572 	ld	hl, #___current_base_prop
                                    573 ;/usr/local/opt/gbdk/include/gb/metasprites.h:154: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      0001CA AF               [ 4]  574 	xor	a, a
      0001CB 77               [ 8]  575 	ld	(hl),a
      0001CC B3               [ 4]  576 	or	a, e
      0001CD 5F               [ 4]  577 	ld	e, a
      0001CE 51               [ 4]  578 	ld	d, c
      0001CF AF               [ 4]  579 	xor	a, a
      0001D0 CDr00r00         [24]  580 	call	___move_metasprite
                           0001D3   581 	C$player.c$83$1_0$236	= .
                                    582 	.globl	C$player.c$83$1_0$236
                                    583 ;src/player.c:83: if (direction == LEFT) move_metasprite_ex(rover_metasprite,0,0,0,width_pixel.h,depth_pixel.h);
      0001D3                        584 00102$:
                           0001D3   585 	C$player.c$84$1_0$236	= .
                                    586 	.globl	C$player.c$84$1_0$236
                                    587 ;src/player.c:84: if (direction == RIGHT) move_metasprite_flipx(rover_metasprite,0,0,0,width_pixel.h,depth_pixel.h);
      0001D3 F8 00            [12]  588 	ldhl	sp,	#0
      0001D5 7E               [ 8]  589 	ld	a, (hl)
      0001D6 D6 02            [ 8]  590 	sub	a, #0x02
      0001D8 20 29            [12]  591 	jr	NZ, 00109$
      0001DA 21r01r00         [12]  592 	ld	hl, #(_depth_pixel + 1)
      0001DD 46               [ 8]  593 	ld	b, (hl)
      0001DE 21r01r00         [12]  594 	ld	hl, #(_width_pixel + 1)
      0001E1 4E               [ 8]  595 	ld	c, (hl)
                                    596 ;/usr/local/opt/gbdk/include/gb/metasprites.h:191: __current_metasprite = metasprite;
      0001E2 21r00r00         [12]  597 	ld	hl, #___current_metasprite
      0001E5 36r44            [12]  598 	ld	(hl), #<(_rover_metasprite)
      0001E7 23               [ 8]  599 	inc	hl
      0001E8 36s00            [12]  600 	ld	(hl), #>(_rover_metasprite)
                                    601 ;/usr/local/opt/gbdk/include/gb/metasprites.h:192: __current_base_tile = base_tile;
      0001EA 21r00r00         [12]  602 	ld	hl, #___current_base_tile
      0001ED 36 00            [12]  603 	ld	(hl), #0x00
                                    604 ;/usr/local/opt/gbdk/include/gb/metasprites.h:193: __current_base_prop = base_prop;
      0001EF 21r00r00         [12]  605 	ld	hl, #___current_base_prop
      0001F2 36 00            [12]  606 	ld	(hl), #0x00
                                    607 ;/usr/local/opt/gbdk/include/gb/metasprites.h:194: return __move_metasprite_flipx(base_sprite, (y << 8) | (uint8_t)(x - 8u));
      0001F4 50               [ 4]  608 	ld	d, b
      0001F5 1E 00            [ 8]  609 	ld	e, #0x00
      0001F7 79               [ 4]  610 	ld	a, c
      0001F8 C6 F8            [ 8]  611 	add	a, #0xf8
      0001FA 0E 00            [ 8]  612 	ld	c, #0x00
      0001FC B3               [ 4]  613 	or	a, e
      0001FD 5F               [ 4]  614 	ld	e, a
      0001FE AF               [ 4]  615 	xor	a, a
      0001FF 33               [ 8]  616 	inc	sp
      000200 C3r00r00         [16]  617 	jp	___move_metasprite_flipx
                           000203   618 	C$player.c$84$1_0$236	= .
                                    619 	.globl	C$player.c$84$1_0$236
                                    620 ;src/player.c:84: if (direction == RIGHT) move_metasprite_flipx(rover_metasprite,0,0,0,width_pixel.h,depth_pixel.h);
      000203                        621 00109$:
                           000203   622 	C$player.c$85$1_0$236	= .
                                    623 	.globl	C$player.c$85$1_0$236
                                    624 ;src/player.c:85: }
      000203 33               [ 8]  625 	inc	sp
                           000204   626 	C$player.c$85$1_0$236	= .
                                    627 	.globl	C$player.c$85$1_0$236
                           000204   628 	XG$metasprite_rover$0$0	= .
                                    629 	.globl	XG$metasprite_rover$0$0
      000204 C9               [16]  630 	ret
                           000205   631 	G$draw_metasprite$0$0	= .
                                    632 	.globl	G$draw_metasprite$0$0
                           000205   633 	C$player.c$87$1_0$250	= .
                                    634 	.globl	C$player.c$87$1_0$250
                                    635 ;src/player.c:87: void draw_metasprite(char direction){
                                    636 ;	---------------------------------
                                    637 ; Function draw_metasprite
                                    638 ; ---------------------------------
      000205                        639 _draw_metasprite::
                           000205   640 	C$player.c$88$1_0$250	= .
                                    641 	.globl	C$player.c$88$1_0$250
                                    642 ;src/player.c:88: if (direction == LEFT || direction == RIGHT){
      000205 4F               [ 4]  643 	ld	c, a
      000206 3D               [ 4]  644 	dec	a
      000207 28 05            [12]  645 	jr	Z, 00108$
      000209 79               [ 4]  646 	ld	a, c
      00020A D6 02            [ 8]  647 	sub	a, #0x02
      00020C 20 10            [12]  648 	jr	NZ, 00109$
      00020E                        649 00108$:
                           00020E   650 	C$player.c$89$2_0$251	= .
                                    651 	.globl	C$player.c$89$2_0$251
                                    652 ;src/player.c:89: metasprite_rover(direction);
      00020E C5               [16]  653 	push	bc
      00020F 79               [ 4]  654 	ld	a, c
      000210 CDr8Dr01         [24]  655 	call	_metasprite_rover
      000213 C1               [12]  656 	pop	bc
                           000214   657 	C$player.c$90$2_0$251	= .
                                    658 	.globl	C$player.c$90$2_0$251
                                    659 ;src/player.c:90: if (is_drilling == TRUE) metasprite_drill_horizontal(direction);
      000214 21r00r00         [12]  660 	ld	hl, #_is_drilling
      000217 7E               [ 8]  661 	ld	a, (hl)
      000218 3D               [ 4]  662 	dec	a
      000219 C0               [20]  663 	ret	NZ
      00021A 79               [ 4]  664 	ld	a, c
      00021B C3rECr00         [16]  665 	jp	_metasprite_drill_horizontal
      00021E                        666 00109$:
                           00021E   667 	C$player.c$91$1_0$250	= .
                                    668 	.globl	C$player.c$91$1_0$250
                                    669 ;src/player.c:91: } else if (direction == UP || direction == DOWN) {
      00021E 79               [ 4]  670 	ld	a,c
      00021F FE 03            [ 8]  671 	cp	a,#0x03
      000221 28 03            [12]  672 	jr	Z, 00105$
      000223 D6 04            [ 8]  673 	sub	a, #0x04
      000225 C0               [20]  674 	ret	NZ
      000226                        675 00105$:
                           000226   676 	C$player.c$92$2_0$252	= .
                                    677 	.globl	C$player.c$92$2_0$252
                                    678 ;src/player.c:92: metasprite_rover(direction_prev);
      000226 C5               [16]  679 	push	bc
      000227 FAr00r00         [16]  680 	ld	a, (#_direction_prev)
      00022A CDr8Dr01         [24]  681 	call	_metasprite_rover
      00022D C1               [12]  682 	pop	bc
                           00022E   683 	C$player.c$93$2_0$252	= .
                                    684 	.globl	C$player.c$93$2_0$252
                                    685 ;src/player.c:93: if (is_drilling == TRUE) metasprite_drill_vertical(direction);
      00022E 21r00r00         [12]  686 	ld	hl, #_is_drilling
      000231 7E               [ 8]  687 	ld	a, (hl)
      000232 3D               [ 4]  688 	dec	a
      000233 C0               [20]  689 	ret	NZ
      000234 79               [ 4]  690 	ld	a, c
                           000235   691 	C$player.c$95$1_0$250	= .
                                    692 	.globl	C$player.c$95$1_0$250
                                    693 ;src/player.c:95: }
                           000235   694 	C$player.c$95$1_0$250	= .
                                    695 	.globl	C$player.c$95$1_0$250
                           000235   696 	XG$draw_metasprite$0$0	= .
                                    697 	.globl	XG$draw_metasprite$0$0
      000235 C3r54r01         [16]  698 	jp	_metasprite_drill_vertical
                           000238   699 	G$update_movement$0$0	= .
                                    700 	.globl	G$update_movement$0$0
                           000238   701 	C$player.c$97$1_0$254	= .
                                    702 	.globl	C$player.c$97$1_0$254
                                    703 ;src/player.c:97: void update_movement(void) {
                                    704 ;	---------------------------------
                                    705 ; Function update_movement
                                    706 ; ---------------------------------
      000238                        707 _update_movement::
                           000238   708 	C$player.c$98$1_0$254	= .
                                    709 	.globl	C$player.c$98$1_0$254
                                    710 ;src/player.c:98: if (animation_frames_left > 0) {
      000238 FAr00r00         [16]  711 	ld	a, (#_animation_frames_left)
      00023B B7               [ 4]  712 	or	a, a
      00023C C8               [20]  713 	ret	Z
                           00023D   714 	C$player.c$100$2_0$255	= .
                                    715 	.globl	C$player.c$100$2_0$255
                                    716 ;src/player.c:100: scroll_x.w += scroll_x_per_frame.w;
      00023D 21r00r00         [12]  717 	ld	hl, #_scroll_x
      000240 2A               [ 8]  718 	ld	a, (hl+)
      000241 4F               [ 4]  719 	ld	c, a
      000242 46               [ 8]  720 	ld	b, (hl)
      000243 21r00r00         [12]  721 	ld	hl, #_scroll_x_per_frame
      000246 2A               [ 8]  722 	ld	a,	(hl+)
      000247 66               [ 8]  723 	ld	h, (hl)
                                    724 ;	spillPairReg hl
      000248 6F               [ 4]  725 	ld	l, a
                                    726 ;	spillPairReg hl
                                    727 ;	spillPairReg hl
      000249 09               [ 8]  728 	add	hl, bc
      00024A 4D               [ 4]  729 	ld	c, l
      00024B 44               [ 4]  730 	ld	b, h
      00024C 21r00r00         [12]  731 	ld	hl, #_scroll_x
      00024F 79               [ 4]  732 	ld	a, c
      000250 22               [ 8]  733 	ld	(hl+), a
      000251 70               [ 8]  734 	ld	(hl), b
                           000252   735 	C$player.c$101$2_0$255	= .
                                    736 	.globl	C$player.c$101$2_0$255
                                    737 ;src/player.c:101: scroll_y.w += scroll_y_per_frame.w;
      000252 21r00r00         [12]  738 	ld	hl, #_scroll_y
      000255 2A               [ 8]  739 	ld	a, (hl+)
      000256 4F               [ 4]  740 	ld	c, a
      000257 46               [ 8]  741 	ld	b, (hl)
      000258 21r00r00         [12]  742 	ld	hl, #_scroll_y_per_frame
      00025B 2A               [ 8]  743 	ld	a,	(hl+)
      00025C 66               [ 8]  744 	ld	h, (hl)
                                    745 ;	spillPairReg hl
      00025D 6F               [ 4]  746 	ld	l, a
                                    747 ;	spillPairReg hl
                                    748 ;	spillPairReg hl
      00025E 09               [ 8]  749 	add	hl, bc
      00025F 4D               [ 4]  750 	ld	c, l
      000260 44               [ 4]  751 	ld	b, h
      000261 21r00r00         [12]  752 	ld	hl, #_scroll_y
      000264 79               [ 4]  753 	ld	a, c
      000265 22               [ 8]  754 	ld	(hl+), a
      000266 70               [ 8]  755 	ld	(hl), b
                           000267   756 	C$player.c$102$2_0$255	= .
                                    757 	.globl	C$player.c$102$2_0$255
                                    758 ;src/player.c:102: width_pixel.w += move_x_per_frame.w;
      000267 21r00r00         [12]  759 	ld	hl, #_width_pixel
      00026A 2A               [ 8]  760 	ld	a, (hl+)
      00026B 4F               [ 4]  761 	ld	c, a
      00026C 46               [ 8]  762 	ld	b, (hl)
      00026D 21r00r00         [12]  763 	ld	hl, #_move_x_per_frame
      000270 2A               [ 8]  764 	ld	a,	(hl+)
      000271 66               [ 8]  765 	ld	h, (hl)
                                    766 ;	spillPairReg hl
      000272 6F               [ 4]  767 	ld	l, a
                                    768 ;	spillPairReg hl
                                    769 ;	spillPairReg hl
      000273 09               [ 8]  770 	add	hl, bc
      000274 4D               [ 4]  771 	ld	c, l
      000275 44               [ 4]  772 	ld	b, h
      000276 21r00r00         [12]  773 	ld	hl, #_width_pixel
      000279 79               [ 4]  774 	ld	a, c
      00027A 22               [ 8]  775 	ld	(hl+), a
      00027B 70               [ 8]  776 	ld	(hl), b
                           00027C   777 	C$player.c$103$2_0$255	= .
                                    778 	.globl	C$player.c$103$2_0$255
                                    779 ;src/player.c:103: depth_pixel.w += move_y_per_frame.w;
      00027C 21r00r00         [12]  780 	ld	hl, #_depth_pixel
      00027F 2A               [ 8]  781 	ld	a, (hl+)
      000280 4F               [ 4]  782 	ld	c, a
      000281 46               [ 8]  783 	ld	b, (hl)
      000282 21r00r00         [12]  784 	ld	hl, #_move_y_per_frame
      000285 2A               [ 8]  785 	ld	a,	(hl+)
      000286 66               [ 8]  786 	ld	h, (hl)
                                    787 ;	spillPairReg hl
      000287 6F               [ 4]  788 	ld	l, a
                                    789 ;	spillPairReg hl
                                    790 ;	spillPairReg hl
      000288 09               [ 8]  791 	add	hl, bc
      000289 4D               [ 4]  792 	ld	c, l
      00028A 44               [ 4]  793 	ld	b, h
      00028B 21r00r00         [12]  794 	ld	hl, #_depth_pixel
      00028E 79               [ 4]  795 	ld	a, c
      00028F 22               [ 8]  796 	ld	(hl+), a
      000290 70               [ 8]  797 	ld	(hl), b
                           000291   798 	C$player.c$106$2_0$255	= .
                                    799 	.globl	C$player.c$106$2_0$255
                                    800 ;src/player.c:106: draw_metasprite(direction_now);
      000291 FAr00r00         [16]  801 	ld	a, (#_direction_now)
      000294 CDr05r02         [24]  802 	call	_draw_metasprite
                                    803 ;src/player.c:109: move_bkg(scroll_x.h, scroll_y.h);
      000297 21r01r00         [12]  804 	ld	hl, #(_scroll_y + 1)
      00029A 4E               [ 8]  805 	ld	c, (hl)
      00029B FAr01r00         [16]  806 	ld	a, (#(_scroll_x + 1) + 0)
      00029E E0r00            [12]  807 	ldh	(_SCX_REG + 0), a
                                    808 ;/usr/local/opt/gbdk/include/gb/gb.h:1378: SCX_REG=x, SCY_REG=y;
      0002A0 79               [ 4]  809 	ld	a, c
      0002A1 E0r00            [12]  810 	ldh	(_SCY_REG + 0), a
                           0002A3   811 	C$player.c$112$2_0$255	= .
                                    812 	.globl	C$player.c$112$2_0$255
                                    813 ;src/player.c:112: animation_frames_left--;
      0002A3 21r00r00         [12]  814 	ld	hl, #_animation_frames_left
      0002A6 35               [12]  815 	dec	(hl)
                           0002A7   816 	C$player.c$115$2_0$255	= .
                                    817 	.globl	C$player.c$115$2_0$255
                                    818 ;src/player.c:115: if (animation_frames_left % 15 == 0) {  // Every 15 frames
      0002A7 5E               [ 8]  819 	ld	e, (hl)
      0002A8 16 00            [ 8]  820 	ld	d, #0x00
      0002AA 01 0F 00         [12]  821 	ld	bc, #0x000f
      0002AD CDr00r00         [24]  822 	call	__modsint
      0002B0 78               [ 4]  823 	ld	a, b
      0002B1 B1               [ 4]  824 	or	a, c
      0002B2 20 0D            [12]  825 	jr	NZ, 00102$
                           0002B4   826 	C$player.c$116$3_0$256	= .
                                    827 	.globl	C$player.c$116$3_0$256
                                    828 ;src/player.c:116: player.fuel.current_value -= 1;
      0002B4 21r10r00         [12]  829 	ld	hl, #(_player + 16)
      0002B7 2A               [ 8]  830 	ld	a, (hl+)
      0002B8 4F               [ 4]  831 	ld	c, a
      0002B9 46               [ 8]  832 	ld	b, (hl)
      0002BA 0B               [ 8]  833 	dec	bc
      0002BB 21r10r00         [12]  834 	ld	hl, #(_player + 16)
      0002BE 79               [ 4]  835 	ld	a, c
      0002BF 22               [ 8]  836 	ld	(hl+), a
      0002C0 70               [ 8]  837 	ld	(hl), b
      0002C1                        838 00102$:
                           0002C1   839 	C$player.c$120$2_0$255	= .
                                    840 	.globl	C$player.c$120$2_0$255
                                    841 ;src/player.c:120: if (animation_frames_left == 0) {
      0002C1 FAr00r00         [16]  842 	ld	a, (#_animation_frames_left)
      0002C4 B7               [ 4]  843 	or	a, a
      0002C5 C0               [20]  844 	ret	NZ
                           0002C6   845 	C$player.c$121$3_0$257	= .
                                    846 	.globl	C$player.c$121$3_0$257
                                    847 ;src/player.c:121: move_x_per_frame.w = 0;
      0002C6 21r00r00         [12]  848 	ld	hl, #_move_x_per_frame
      0002C9 AF               [ 4]  849 	xor	a, a
      0002CA 22               [ 8]  850 	ld	(hl+), a
      0002CB 77               [ 8]  851 	ld	(hl), a
                           0002CC   852 	C$player.c$122$3_0$257	= .
                                    853 	.globl	C$player.c$122$3_0$257
                                    854 ;src/player.c:122: move_y_per_frame.w = 0;
      0002CC 21r00r00         [12]  855 	ld	hl, #_move_y_per_frame
      0002CF AF               [ 4]  856 	xor	a, a
      0002D0 22               [ 8]  857 	ld	(hl+), a
      0002D1 77               [ 8]  858 	ld	(hl), a
                           0002D2   859 	C$player.c$123$3_0$257	= .
                                    860 	.globl	C$player.c$123$3_0$257
                                    861 ;src/player.c:123: scroll_x_per_frame.w = 0;
      0002D2 21r00r00         [12]  862 	ld	hl, #_scroll_x_per_frame
      0002D5 AF               [ 4]  863 	xor	a, a
      0002D6 22               [ 8]  864 	ld	(hl+), a
      0002D7 77               [ 8]  865 	ld	(hl), a
                           0002D8   866 	C$player.c$124$3_0$257	= .
                                    867 	.globl	C$player.c$124$3_0$257
                                    868 ;src/player.c:124: scroll_y_per_frame.w = 0;
      0002D8 21r00r00         [12]  869 	ld	hl, #_scroll_y_per_frame
      0002DB AF               [ 4]  870 	xor	a, a
      0002DC 22               [ 8]  871 	ld	(hl+), a
      0002DD 77               [ 8]  872 	ld	(hl), a
                           0002DE   873 	C$player.c$127$3_0$257	= .
                                    874 	.globl	C$player.c$127$3_0$257
                                    875 ;src/player.c:127: width_pixel.h = 16 + (width - width_offset) * 16, width_pixel.l = 0;
      0002DE FAr00r00         [16]  876 	ld	a, (#_width)
      0002E1 21r00r00         [12]  877 	ld	hl, #_width_offset
      0002E4 96               [ 8]  878 	sub	a, (hl)
      0002E5 CB 37            [ 8]  879 	swap	a
      0002E7 E6 F0            [ 8]  880 	and	a, #0xf0
      0002E9 C6 10            [ 8]  881 	add	a, #0x10
      0002EB EAr01r00         [16]  882 	ld	(#(_width_pixel + 1)),a
      0002EE 21r00r00         [12]  883 	ld	hl, #_width_pixel
      0002F1 36 00            [12]  884 	ld	(hl), #0x00
                           0002F3   885 	C$player.c$128$3_0$257	= .
                                    886 	.globl	C$player.c$128$3_0$257
                                    887 ;src/player.c:128: depth_pixel.h = 24 + (depth - depth_offset) * 16, depth_pixel.l = 0;
      0002F3 01r01r00         [12]  888 	ld	bc, #_depth_pixel + 1
      0002F6 FAr00r00         [16]  889 	ld	a, (#_depth)
      0002F9 21r00r00         [12]  890 	ld	hl, #_depth_offset
      0002FC 96               [ 8]  891 	sub	a, (hl)
      0002FD CB 37            [ 8]  892 	swap	a
      0002FF E6 F0            [ 8]  893 	and	a, #0xf0
      000301 C6 18            [ 8]  894 	add	a, #0x18
      000303 02               [ 8]  895 	ld	(bc), a
      000304 21r00r00         [12]  896 	ld	hl, #_depth_pixel
      000307 36 00            [12]  897 	ld	(hl), #0x00
                           000309   898 	C$player.c$129$3_0$257	= .
                                    899 	.globl	C$player.c$129$3_0$257
                                    900 ;src/player.c:129: scroll_x.h = width_offset * 16, scroll_x.l = 0;
      000309 FAr00r00         [16]  901 	ld	a, (#_width_offset)
      00030C CB 37            [ 8]  902 	swap	a
      00030E E6 F0            [ 8]  903 	and	a, #0xf0
      000310 EAr01r00         [16]  904 	ld	(#(_scroll_x + 1)),a
      000313 21r00r00         [12]  905 	ld	hl, #_scroll_x
      000316 36 00            [12]  906 	ld	(hl), #0x00
                           000318   907 	C$player.c$130$3_0$257	= .
                                    908 	.globl	C$player.c$130$3_0$257
                                    909 ;src/player.c:130: scroll_y.h = depth_offset * 16, scroll_y.l = 0;  
      000318 FAr00r00         [16]  910 	ld	a, (#_depth_offset)
      00031B CB 37            [ 8]  911 	swap	a
      00031D E6 F0            [ 8]  912 	and	a, #0xf0
      00031F EAr01r00         [16]  913 	ld	(#(_scroll_y + 1)),a
      000322 21r00r00         [12]  914 	ld	hl, #_scroll_y
      000325 36 00            [12]  915 	ld	(hl), #0x00
                           000327   916 	C$player.c$132$3_0$257	= .
                                    917 	.globl	C$player.c$132$3_0$257
                                    918 ;src/player.c:132: prev_depth = depth;
      000327 FAr00r00         [16]  919 	ld	a, (#_depth)
      00032A EAr00r00         [16]  920 	ld	(#_prev_depth),a
                           00032D   921 	C$player.c$133$3_0$257	= .
                                    922 	.globl	C$player.c$133$3_0$257
                                    923 ;src/player.c:133: width_pixel.h = 16 + ((width - width_offset) * 16);
      00032D FAr00r00         [16]  924 	ld	a, (#_width)
      000330 21r00r00         [12]  925 	ld	hl, #_width_offset
      000333 96               [ 8]  926 	sub	a, (hl)
      000334 CB 37            [ 8]  927 	swap	a
      000336 E6 F0            [ 8]  928 	and	a, #0xf0
      000338 C6 10            [ 8]  929 	add	a, #0x10
      00033A EAr01r00         [16]  930 	ld	(#(_width_pixel + 1)),a
                           00033D   931 	C$player.c$134$3_0$257	= .
                                    932 	.globl	C$player.c$134$3_0$257
                                    933 ;src/player.c:134: depth_pixel.h = 16 + 8 + (depth - depth_offset) * 16;
      00033D FAr00r00         [16]  934 	ld	a, (#_depth)
      000340 21r00r00         [12]  935 	ld	hl, #_depth_offset
      000343 96               [ 8]  936 	sub	a, (hl)
      000344 CB 37            [ 8]  937 	swap	a
      000346 E6 F0            [ 8]  938 	and	a, #0xf0
      000348 C6 18            [ 8]  939 	add	a, #0x18
      00034A 02               [ 8]  940 	ld	(bc), a
                           00034B   941 	C$player.c$135$3_0$257	= .
                                    942 	.globl	C$player.c$135$3_0$257
                                    943 ;src/player.c:135: scroll_x.h = width_offset * 16;
      00034B FAr00r00         [16]  944 	ld	a, (#_width_offset)
      00034E CB 37            [ 8]  945 	swap	a
      000350 E6 F0            [ 8]  946 	and	a, #0xf0
      000352 EAr01r00         [16]  947 	ld	(#(_scroll_x + 1)),a
                           000355   948 	C$player.c$136$3_0$257	= .
                                    949 	.globl	C$player.c$136$3_0$257
                                    950 ;src/player.c:136: scroll_y.h = depth_offset * 16;
      000355 FAr00r00         [16]  951 	ld	a, (#_depth_offset)
      000358 CB 37            [ 8]  952 	swap	a
      00035A E6 F0            [ 8]  953 	and	a, #0xf0
      00035C EAr01r00         [16]  954 	ld	(#(_scroll_y + 1)),a
                           00035F   955 	C$player.c$139$3_0$257	= .
                                    956 	.globl	C$player.c$139$3_0$257
                                    957 ;src/player.c:139: is_drilling = FALSE;
      00035F 21r00r00         [12]  958 	ld	hl, #_is_drilling
      000362 36 00            [12]  959 	ld	(hl), #0x00
                           000364   960 	C$player.c$141$3_0$257	= .
                                    961 	.globl	C$player.c$141$3_0$257
                                    962 ;src/player.c:141: if (level_array[depth][width] != 0){
      000364 01r00r00         [12]  963 	ld	bc, #_level_array+0
      000367 21r00r00         [12]  964 	ld	hl, #_depth
      00036A 6E               [ 8]  965 	ld	l, (hl)
                                    966 ;	spillPairReg hl
                                    967 ;	spillPairReg hl
      00036B 26 00            [ 8]  968 	ld	h, #0x00
                                    969 ;	spillPairReg hl
                                    970 ;	spillPairReg hl
      00036D 29               [ 8]  971 	add	hl, hl
      00036E 29               [ 8]  972 	add	hl, hl
      00036F 29               [ 8]  973 	add	hl, hl
      000370 29               [ 8]  974 	add	hl, hl
      000371 09               [ 8]  975 	add	hl, bc
      000372 4D               [ 4]  976 	ld	c, l
      000373 44               [ 4]  977 	ld	b, h
      000374 21r00r00         [12]  978 	ld	hl, #_width
      000377 6E               [ 8]  979 	ld	l, (hl)
                                    980 ;	spillPairReg hl
                                    981 ;	spillPairReg hl
      000378 26 00            [ 8]  982 	ld	h, #0x00
      00037A 09               [ 8]  983 	add	hl, bc
      00037B 7E               [ 8]  984 	ld	a, (hl)
      00037C B7               [ 4]  985 	or	a, a
      00037D 28 05            [12]  986 	jr	Z, 00104$
                           00037F   987 	C$player.c$142$4_0$258	= .
                                    988 	.globl	C$player.c$142$4_0$258
                                    989 ;src/player.c:142: tile_mined = TRUE;
      00037F 21r00r00         [12]  990 	ld	hl, #_tile_mined
      000382 36 01            [12]  991 	ld	(hl), #0x01
      000384                        992 00104$:
                           000384   993 	C$player.c$145$3_0$257	= .
                                    994 	.globl	C$player.c$145$3_0$257
                                    995 ;src/player.c:145: draw_metasprite(direction_now);
      000384 FAr00r00         [16]  996 	ld	a, (#_direction_now)
      000387 CDr05r02         [24]  997 	call	_draw_metasprite
                                    998 ;src/player.c:147: move_bkg(scroll_x.h, scroll_y.h);
      00038A FAr01r00         [16]  999 	ld	a, (#(_scroll_y + 1) + 0)
      00038D 21r01r00         [12] 1000 	ld	hl, #(_scroll_x + 1)
      000390 F5               [16] 1001 	push	af
      000391 7E               [ 8] 1002 	ld	a, (hl)
      000392 E0r00            [12] 1003 	ldh	(_SCX_REG + 0), a
      000394 F1               [12] 1004 	pop	af
                                   1005 ;/usr/local/opt/gbdk/include/gb/gb.h:1378: SCX_REG=x, SCY_REG=y;
      000395 E0r00            [12] 1006 	ldh	(_SCY_REG + 0), a
                           000397  1007 	C$player.c$147$1_0$254	= .
                                   1008 	.globl	C$player.c$147$1_0$254
                                   1009 ;src/player.c:147: move_bkg(scroll_x.h, scroll_y.h);
                           000397  1010 	C$player.c$151$1_0$254	= .
                                   1011 	.globl	C$player.c$151$1_0$254
                                   1012 ;src/player.c:151: }
                           000397  1013 	C$player.c$151$1_0$254	= .
                                   1014 	.globl	C$player.c$151$1_0$254
                           000397  1015 	XG$update_movement$0$0	= .
                                   1016 	.globl	XG$update_movement$0$0
      000397 C9               [16] 1017 	ret
                           000398  1018 	G$calculate_frames$0$0	= .
                                   1019 	.globl	G$calculate_frames$0$0
                           000398  1020 	C$player.c$153$1_0$266	= .
                                   1021 	.globl	C$player.c$153$1_0$266
                                   1022 ;src/player.c:153: uint8_t calculate_frames(void){
                                   1023 ;	---------------------------------
                                   1024 ; Function calculate_frames
                                   1025 ; ---------------------------------
      000398                       1026 _calculate_frames::
                           000398  1027 	C$player.c$155$1_0$266	= .
                                   1028 	.globl	C$player.c$155$1_0$266
                                   1029 ;src/player.c:155: frames = base_drilltime + (materials[next_tile].ore_resistance / player.drill.max_value);
      000398 21r00r00         [12] 1030 	ld	hl, #_next_tile
      00039B 4E               [ 8] 1031 	ld	c, (hl)
      00039C 06 00            [ 8] 1032 	ld	b, #0x00
      00039E 69               [ 4] 1033 	ld	l, c
      00039F 60               [ 4] 1034 	ld	h, b
      0003A0 29               [ 8] 1035 	add	hl, hl
      0003A1 29               [ 8] 1036 	add	hl, hl
      0003A2 29               [ 8] 1037 	add	hl, hl
      0003A3 09               [ 8] 1038 	add	hl, bc
      0003A4 01r00r00         [12] 1039 	ld	bc,#_materials
      0003A7 09               [ 8] 1040 	add	hl,bc
      0003A8 23               [ 8] 1041 	inc	hl
      0003A9 23               [ 8] 1042 	inc	hl
      0003AA 23               [ 8] 1043 	inc	hl
      0003AB 4E               [ 8] 1044 	ld	c, (hl)
      0003AC 21r84r00         [12] 1045 	ld	hl, #(_player + 132)
      0003AF 2A               [ 8] 1046 	ld	a,	(hl+)
      0003B0 46               [ 8] 1047 	ld	b, (hl)
      0003B1 6F               [ 4] 1048 	ld	l, a
                                   1049 ;	spillPairReg hl
                                   1050 ;	spillPairReg hl
      0003B2 59               [ 4] 1051 	ld	e, c
      0003B3 16 00            [ 8] 1052 	ld	d, #0x00
      0003B5 4D               [ 4] 1053 	ld	c, l
      0003B6 CDr00r00         [24] 1054 	call	__divsint
      0003B9 FAr00r00         [16] 1055 	ld	a, (#_base_drilltime)
      0003BC 81               [ 4] 1056 	add	a, c
                           0003BD  1057 	C$player.c$156$1_0$266	= .
                                   1058 	.globl	C$player.c$156$1_0$266
                                   1059 ;src/player.c:156: return frames;
                           0003BD  1060 	C$player.c$157$1_0$266	= .
                                   1061 	.globl	C$player.c$157$1_0$266
                                   1062 ;src/player.c:157: }
                           0003BD  1063 	C$player.c$157$1_0$266	= .
                                   1064 	.globl	C$player.c$157$1_0$266
                           0003BD  1065 	XG$calculate_frames$0$0	= .
                                   1066 	.globl	XG$calculate_frames$0$0
      0003BD C9               [16] 1067 	ret
                           0003BE  1068 	G$calculate_speed$0$0	= .
                                   1069 	.globl	G$calculate_speed$0$0
                           0003BE  1070 	C$player.c$159$1_0$268	= .
                                   1071 	.globl	C$player.c$159$1_0$268
                                   1072 ;src/player.c:159: fixed calculate_speed(uint8_t frames){
                                   1073 ;	---------------------------------
                                   1074 ; Function calculate_speed
                                   1075 ; ---------------------------------
      0003BE                       1076 _calculate_speed::
      0003BE 3B               [ 8] 1077 	dec	sp
      0003BF 3B               [ 8] 1078 	dec	sp
      0003C0 4F               [ 4] 1079 	ld	c, a
                           0003C1  1080 	C$player.c$161$1_0$268	= .
                                   1081 	.globl	C$player.c$161$1_0$268
                                   1082 ;src/player.c:161: speed.w = 4096 / frames;
      0003C1 06 00            [ 8] 1083 	ld	b, #0x00
      0003C3 11 00 10         [12] 1084 	ld	de, #0x1000
      0003C6 CDr00r00         [24] 1085 	call	__divsint
      0003C9 E1               [12] 1086 	pop	hl
      0003CA C5               [16] 1087 	push	bc
                           0003CB  1088 	C$player.c$162$1_0$268	= .
                                   1089 	.globl	C$player.c$162$1_0$268
                                   1090 ;src/player.c:162: return speed;
      0003CB F8 04            [12] 1091 	ldhl	sp,	#4
      0003CD 2A               [ 8] 1092 	ld	a, (hl+)
      0003CE 4F               [ 4] 1093 	ld	c, a
      0003CF 46               [ 8] 1094 	ld	b, (hl)
      0003D0 F8 00            [12] 1095 	ldhl	sp,	#0
      0003D2 2A               [ 8] 1096 	ld	a, (hl+)
      0003D3 02               [ 8] 1097 	ld	(bc), a
      0003D4 03               [ 8] 1098 	inc	bc
      0003D5 7E               [ 8] 1099 	ld	a, (hl)
      0003D6 02               [ 8] 1100 	ld	(bc), a
                           0003D7  1101 	C$player.c$163$1_0$268	= .
                                   1102 	.globl	C$player.c$163$1_0$268
                                   1103 ;src/player.c:163: }
      0003D7 33               [ 8] 1104 	inc	sp
      0003D8 33               [ 8] 1105 	inc	sp
      0003D9 E1               [12] 1106 	pop	hl
      0003DA F1               [12] 1107 	pop	af
      0003DB E9               [ 4] 1108 	jp	(hl)
                           0003DC  1109 	G$move_left$0$0	= .
                                   1110 	.globl	G$move_left$0$0
                           0003DC  1111 	C$player.c$165$1_0$270	= .
                                   1112 	.globl	C$player.c$165$1_0$270
                                   1113 ;src/player.c:165: void move_left(uint8_t frames){
                                   1114 ;	---------------------------------
                                   1115 ; Function move_left
                                   1116 ; ---------------------------------
      0003DC                       1117 _move_left::
      0003DC E8 FD            [16] 1118 	add	sp, #-3
      0003DE F8 02            [12] 1119 	ldhl	sp,	#2
      0003E0 77               [ 8] 1120 	ld	(hl), a
                           0003E1  1121 	C$player.c$166$1_0$270	= .
                                   1122 	.globl	C$player.c$166$1_0$270
                                   1123 ;src/player.c:166: player.speed = calculate_speed(frames);
      0003E1 7E               [ 8] 1124 	ld	a, (hl)
      0003E2 F8 00            [12] 1125 	ldhl	sp,	#0
      0003E4 E5               [16] 1126 	push	hl
      0003E5 CDrBEr03         [24] 1127 	call	_calculate_speed
      0003E8 F8 00            [12] 1128 	ldhl	sp,	#0
      0003EA 4D               [ 4] 1129 	ld	c, l
      0003EB 44               [ 4] 1130 	ld	b, h
      0003EC 11 02 00         [12] 1131 	ld	de, #0x0002
      0003EF D5               [16] 1132 	push	de
      0003F0 11r58r01         [12] 1133 	ld	de, #(_player + 344)
      0003F3 CDr00r00         [24] 1134 	call	___memcpy
                           0003F6  1135 	C$player.c$167$1_0$270	= .
                                   1136 	.globl	C$player.c$167$1_0$270
                                   1137 ;src/player.c:167: if (width - width_offset == THRESHOLD && width > THRESHOLD) {
      0003F6 FAr00r00         [16] 1138 	ld	a, (#_width)
      0003F9 0E 00            [ 8] 1139 	ld	c, #0x00
      0003FB 21r00r00         [12] 1140 	ld	hl, #_width_offset
      0003FE 5E               [ 8] 1141 	ld	e, (hl)
      0003FF 16 00            [ 8] 1142 	ld	d, #0x00
      000401 93               [ 4] 1143 	sub	a, e
      000402 5F               [ 4] 1144 	ld	e, a
      000403 79               [ 4] 1145 	ld	a, c
      000404 9A               [ 4] 1146 	sbc	a, d
      000405 47               [ 4] 1147 	ld	b, a
                           000406  1148 	C$player.c$169$1_0$270	= .
                                   1149 	.globl	C$player.c$169$1_0$270
                                   1150 ;src/player.c:169: width--;
      000406 21r00r00         [12] 1151 	ld	hl, #_width
      000409 4E               [ 8] 1152 	ld	c, (hl)
      00040A 0D               [ 4] 1153 	dec	c
                           00040B  1154 	C$player.c$167$1_0$270	= .
                                   1155 	.globl	C$player.c$167$1_0$270
                                   1156 ;src/player.c:167: if (width - width_offset == THRESHOLD && width > THRESHOLD) {
      00040B 7B               [ 4] 1157 	ld	a, e
      00040C D6 02            [ 8] 1158 	sub	a, #0x02
      00040E B0               [ 4] 1159 	or	a, b
      00040F 20 21            [12] 1160 	jr	NZ, 00105$
      000411 3E 02            [ 8] 1161 	ld	a, #0x02
      000413 96               [ 8] 1162 	sub	a, (hl)
      000414 30 1C            [12] 1163 	jr	NC, 00105$
                           000416  1164 	C$player.c$168$2_0$271	= .
                                   1165 	.globl	C$player.c$168$2_0$271
                                   1166 ;src/player.c:168: width_offset--;
      000416 21r00r00         [12] 1167 	ld	hl, #_width_offset
      000419 35               [12] 1168 	dec	(hl)
                           00041A  1169 	C$player.c$169$2_0$271	= .
                                   1170 	.globl	C$player.c$169$2_0$271
                                   1171 ;src/player.c:169: width--;
      00041A 21r00r00         [12] 1172 	ld	hl, #_width
      00041D 71               [ 8] 1173 	ld	(hl), c
                           00041E  1174 	C$player.c$170$2_0$271	= .
                                   1175 	.globl	C$player.c$170$2_0$271
                                   1176 ;src/player.c:170: scroll_x_per_frame.w = - player.speed.w;
      00041E 21r58r01         [12] 1177 	ld	hl, #(_player + 344)
      000421 2A               [ 8] 1178 	ld	a, (hl+)
      000422 4F               [ 4] 1179 	ld	c, a
      000423 46               [ 8] 1180 	ld	b, (hl)
      000424 AF               [ 4] 1181 	xor	a, a
      000425 91               [ 4] 1182 	sub	a, c
      000426 4F               [ 4] 1183 	ld	c, a
      000427 9F               [ 4] 1184 	sbc	a, a
      000428 90               [ 4] 1185 	sub	a, b
      000429 47               [ 4] 1186 	ld	b, a
      00042A 21r00r00         [12] 1187 	ld	hl, #_scroll_x_per_frame
      00042D 79               [ 4] 1188 	ld	a, c
      00042E 22               [ 8] 1189 	ld	(hl+), a
      00042F 70               [ 8] 1190 	ld	(hl), b
      000430 18 1C            [12] 1191 	jr	00106$
      000432                       1192 00105$:
                           000432  1193 	C$player.c$171$1_0$270	= .
                                   1194 	.globl	C$player.c$171$1_0$270
                                   1195 ;src/player.c:171: } else if (width > 0) {
      000432 21r00r00         [12] 1196 	ld	hl, #_width
      000435 7E               [ 8] 1197 	ld	a, (hl)
      000436 B7               [ 4] 1198 	or	a, a
      000437 28 1B            [12] 1199 	jr	Z, 00108$
                           000439  1200 	C$player.c$172$2_0$272	= .
                                   1201 	.globl	C$player.c$172$2_0$272
                                   1202 ;src/player.c:172: width--;
      000439 71               [ 8] 1203 	ld	(hl), c
                           00043A  1204 	C$player.c$173$2_0$272	= .
                                   1205 	.globl	C$player.c$173$2_0$272
                                   1206 ;src/player.c:173: move_x_per_frame.w = - player.speed.w;
      00043A 21r58r01         [12] 1207 	ld	hl, #(_player + 344)
      00043D 2A               [ 8] 1208 	ld	a, (hl+)
      00043E 4F               [ 4] 1209 	ld	c, a
      00043F 46               [ 8] 1210 	ld	b, (hl)
      000440 AF               [ 4] 1211 	xor	a, a
      000441 91               [ 4] 1212 	sub	a, c
      000442 4F               [ 4] 1213 	ld	c, a
      000443 9F               [ 4] 1214 	sbc	a, a
      000444 90               [ 4] 1215 	sub	a, b
      000445 47               [ 4] 1216 	ld	b, a
      000446 21r00r00         [12] 1217 	ld	hl, #_move_x_per_frame
      000449 79               [ 4] 1218 	ld	a, c
      00044A 22               [ 8] 1219 	ld	(hl+), a
      00044B 70               [ 8] 1220 	ld	(hl), b
                           00044C  1221 	C$player.c$174$1_0$270	= .
                                   1222 	.globl	C$player.c$174$1_0$270
                                   1223 ;src/player.c:174: } else return;
      00044C 18 00            [12] 1224 	jr	00106$
      00044E                       1225 00106$:
                           00044E  1226 	C$player.c$175$1_0$270	= .
                                   1227 	.globl	C$player.c$175$1_0$270
                                   1228 ;src/player.c:175: animation_frames_left = frames;
      00044E F8 02            [12] 1229 	ldhl	sp,	#2
      000450 7E               [ 8] 1230 	ld	a, (hl)
      000451 EAr00r00         [16] 1231 	ld	(#_animation_frames_left),a
      000454                       1232 00108$:
                           000454  1233 	C$player.c$176$1_0$270	= .
                                   1234 	.globl	C$player.c$176$1_0$270
                                   1235 ;src/player.c:176: }
      000454 E8 03            [16] 1236 	add	sp, #3
                           000456  1237 	C$player.c$176$1_0$270	= .
                                   1238 	.globl	C$player.c$176$1_0$270
                           000456  1239 	XG$move_left$0$0	= .
                                   1240 	.globl	XG$move_left$0$0
      000456 C9               [16] 1241 	ret
                           000457  1242 	G$move_right$0$0	= .
                                   1243 	.globl	G$move_right$0$0
                           000457  1244 	C$player.c$178$1_0$274	= .
                                   1245 	.globl	C$player.c$178$1_0$274
                                   1246 ;src/player.c:178: void move_right(uint8_t frames){
                                   1247 ;	---------------------------------
                                   1248 ; Function move_right
                                   1249 ; ---------------------------------
      000457                       1250 _move_right::
      000457 E8 FD            [16] 1251 	add	sp, #-3
      000459 F8 02            [12] 1252 	ldhl	sp,	#2
      00045B 77               [ 8] 1253 	ld	(hl), a
                           00045C  1254 	C$player.c$179$1_0$274	= .
                                   1255 	.globl	C$player.c$179$1_0$274
                                   1256 ;src/player.c:179: player.speed = calculate_speed(frames);
      00045C 7E               [ 8] 1257 	ld	a, (hl)
      00045D F8 00            [12] 1258 	ldhl	sp,	#0
      00045F E5               [16] 1259 	push	hl
      000460 CDrBEr03         [24] 1260 	call	_calculate_speed
      000463 F8 00            [12] 1261 	ldhl	sp,	#0
      000465 4D               [ 4] 1262 	ld	c, l
      000466 44               [ 4] 1263 	ld	b, h
      000467 11 02 00         [12] 1264 	ld	de, #0x0002
      00046A D5               [16] 1265 	push	de
      00046B 11r58r01         [12] 1266 	ld	de, #(_player + 344)
      00046E CDr00r00         [24] 1267 	call	___memcpy
                           000471  1268 	C$player.c$180$1_0$274	= .
                                   1269 	.globl	C$player.c$180$1_0$274
                                   1270 ;src/player.c:180: if (width - width_offset == (8 - THRESHOLD) + 1 && width < (8 - THRESHOLD) + 7) {
      000471 FAr00r00         [16] 1271 	ld	a, (#_width)
      000474 0E 00            [ 8] 1272 	ld	c, #0x00
      000476 21r00r00         [12] 1273 	ld	hl, #_width_offset
      000479 5E               [ 8] 1274 	ld	e, (hl)
      00047A 16 00            [ 8] 1275 	ld	d, #0x00
      00047C 93               [ 4] 1276 	sub	a, e
      00047D 5F               [ 4] 1277 	ld	e, a
      00047E 79               [ 4] 1278 	ld	a, c
      00047F 9A               [ 4] 1279 	sbc	a, d
      000480 47               [ 4] 1280 	ld	b, a
                           000481  1281 	C$player.c$182$1_0$274	= .
                                   1282 	.globl	C$player.c$182$1_0$274
                                   1283 ;src/player.c:182: width++;
      000481 21r00r00         [12] 1284 	ld	hl, #_width
      000484 4E               [ 8] 1285 	ld	c, (hl)
      000485 0C               [ 4] 1286 	inc	c
                           000486  1287 	C$player.c$180$1_0$274	= .
                                   1288 	.globl	C$player.c$180$1_0$274
                                   1289 ;src/player.c:180: if (width - width_offset == (8 - THRESHOLD) + 1 && width < (8 - THRESHOLD) + 7) {
      000486 7B               [ 4] 1290 	ld	a, e
      000487 D6 07            [ 8] 1291 	sub	a, #0x07
      000489 B0               [ 4] 1292 	or	a, b
      00048A 20 1B            [12] 1293 	jr	NZ, 00105$
      00048C 7E               [ 8] 1294 	ld	a, (hl)
      00048D D6 0D            [ 8] 1295 	sub	a, #0x0d
      00048F 30 16            [12] 1296 	jr	NC, 00105$
                           000491  1297 	C$player.c$181$2_0$275	= .
                                   1298 	.globl	C$player.c$181$2_0$275
                                   1299 ;src/player.c:181: width_offset++;
      000491 21r00r00         [12] 1300 	ld	hl, #_width_offset
      000494 34               [12] 1301 	inc	(hl)
                           000495  1302 	C$player.c$182$2_0$275	= .
                                   1303 	.globl	C$player.c$182$2_0$275
                                   1304 ;src/player.c:182: width++;
      000495 21r00r00         [12] 1305 	ld	hl, #_width
      000498 71               [ 8] 1306 	ld	(hl), c
                           000499  1307 	C$player.c$183$2_0$275	= .
                                   1308 	.globl	C$player.c$183$2_0$275
                                   1309 ;src/player.c:183: scroll_x_per_frame.w = player.speed.w;
      000499 21r58r01         [12] 1310 	ld	hl, #(_player + 344)
      00049C 2A               [ 8] 1311 	ld	a, (hl+)
      00049D 4F               [ 4] 1312 	ld	c, a
      00049E 46               [ 8] 1313 	ld	b, (hl)
      00049F 21r00r00         [12] 1314 	ld	hl, #_scroll_x_per_frame
      0004A2 79               [ 4] 1315 	ld	a, c
      0004A3 22               [ 8] 1316 	ld	(hl+), a
      0004A4 70               [ 8] 1317 	ld	(hl), b
      0004A5 18 17            [12] 1318 	jr	00106$
      0004A7                       1319 00105$:
                           0004A7  1320 	C$player.c$184$1_0$274	= .
                                   1321 	.globl	C$player.c$184$1_0$274
                                   1322 ;src/player.c:184: } else if (width < 15) {
      0004A7 21r00r00         [12] 1323 	ld	hl, #_width
      0004AA 7E               [ 8] 1324 	ld	a, (hl)
      0004AB D6 0F            [ 8] 1325 	sub	a, #0x0f
      0004AD 30 15            [12] 1326 	jr	NC, 00108$
                           0004AF  1327 	C$player.c$185$2_0$276	= .
                                   1328 	.globl	C$player.c$185$2_0$276
                                   1329 ;src/player.c:185: width++;
      0004AF 71               [ 8] 1330 	ld	(hl), c
                           0004B0  1331 	C$player.c$186$2_0$276	= .
                                   1332 	.globl	C$player.c$186$2_0$276
                                   1333 ;src/player.c:186: move_x_per_frame.w = player.speed.w;
      0004B0 21r58r01         [12] 1334 	ld	hl, #(_player + 344)
      0004B3 2A               [ 8] 1335 	ld	a, (hl+)
      0004B4 4F               [ 4] 1336 	ld	c, a
      0004B5 46               [ 8] 1337 	ld	b, (hl)
      0004B6 21r00r00         [12] 1338 	ld	hl, #_move_x_per_frame
      0004B9 79               [ 4] 1339 	ld	a, c
      0004BA 22               [ 8] 1340 	ld	(hl+), a
      0004BB 70               [ 8] 1341 	ld	(hl), b
                           0004BC  1342 	C$player.c$187$1_0$274	= .
                                   1343 	.globl	C$player.c$187$1_0$274
                                   1344 ;src/player.c:187: } else return;
      0004BC 18 00            [12] 1345 	jr	00106$
      0004BE                       1346 00106$:
                           0004BE  1347 	C$player.c$188$1_0$274	= .
                                   1348 	.globl	C$player.c$188$1_0$274
                                   1349 ;src/player.c:188: animation_frames_left = frames;
      0004BE F8 02            [12] 1350 	ldhl	sp,	#2
      0004C0 7E               [ 8] 1351 	ld	a, (hl)
      0004C1 EAr00r00         [16] 1352 	ld	(#_animation_frames_left),a
      0004C4                       1353 00108$:
                           0004C4  1354 	C$player.c$189$1_0$274	= .
                                   1355 	.globl	C$player.c$189$1_0$274
                                   1356 ;src/player.c:189: }
      0004C4 E8 03            [16] 1357 	add	sp, #3
                           0004C6  1358 	C$player.c$189$1_0$274	= .
                                   1359 	.globl	C$player.c$189$1_0$274
                           0004C6  1360 	XG$move_right$0$0	= .
                                   1361 	.globl	XG$move_right$0$0
      0004C6 C9               [16] 1362 	ret
                           0004C7  1363 	G$move_up$0$0	= .
                                   1364 	.globl	G$move_up$0$0
                           0004C7  1365 	C$player.c$191$1_0$278	= .
                                   1366 	.globl	C$player.c$191$1_0$278
                                   1367 ;src/player.c:191: void move_up(uint8_t frames){
                                   1368 ;	---------------------------------
                                   1369 ; Function move_up
                                   1370 ; ---------------------------------
      0004C7                       1371 _move_up::
      0004C7 E8 FD            [16] 1372 	add	sp, #-3
      0004C9 F8 02            [12] 1373 	ldhl	sp,	#2
      0004CB 77               [ 8] 1374 	ld	(hl), a
                           0004CC  1375 	C$player.c$192$1_0$278	= .
                                   1376 	.globl	C$player.c$192$1_0$278
                                   1377 ;src/player.c:192: player.speed = calculate_speed(frames);
      0004CC 7E               [ 8] 1378 	ld	a, (hl)
      0004CD F8 00            [12] 1379 	ldhl	sp,	#0
      0004CF E5               [16] 1380 	push	hl
      0004D0 CDrBEr03         [24] 1381 	call	_calculate_speed
      0004D3 F8 00            [12] 1382 	ldhl	sp,	#0
      0004D5 4D               [ 4] 1383 	ld	c, l
      0004D6 44               [ 4] 1384 	ld	b, h
      0004D7 11 02 00         [12] 1385 	ld	de, #0x0002
      0004DA D5               [16] 1386 	push	de
      0004DB 11r58r01         [12] 1387 	ld	de, #(_player + 344)
      0004DE CDr00r00         [24] 1388 	call	___memcpy
                           0004E1  1389 	C$player.c$193$1_0$278	= .
                                   1390 	.globl	C$player.c$193$1_0$278
                                   1391 ;src/player.c:193: if (depth - depth_offset == THRESHOLD && depth > THRESHOLD) {
      0004E1 FAr00r00         [16] 1392 	ld	a, (#_depth)
      0004E4 0E 00            [ 8] 1393 	ld	c, #0x00
      0004E6 21r00r00         [12] 1394 	ld	hl, #_depth_offset
      0004E9 5E               [ 8] 1395 	ld	e, (hl)
      0004EA 16 00            [ 8] 1396 	ld	d, #0x00
      0004EC 93               [ 4] 1397 	sub	a, e
      0004ED 5F               [ 4] 1398 	ld	e, a
      0004EE 79               [ 4] 1399 	ld	a, c
      0004EF 9A               [ 4] 1400 	sbc	a, d
      0004F0 47               [ 4] 1401 	ld	b, a
                           0004F1  1402 	C$player.c$195$1_0$278	= .
                                   1403 	.globl	C$player.c$195$1_0$278
                                   1404 ;src/player.c:195: depth--;
      0004F1 21r00r00         [12] 1405 	ld	hl, #_depth
      0004F4 4E               [ 8] 1406 	ld	c, (hl)
      0004F5 0D               [ 4] 1407 	dec	c
                           0004F6  1408 	C$player.c$193$1_0$278	= .
                                   1409 	.globl	C$player.c$193$1_0$278
                                   1410 ;src/player.c:193: if (depth - depth_offset == THRESHOLD && depth > THRESHOLD) {
      0004F6 7B               [ 4] 1411 	ld	a, e
      0004F7 D6 02            [ 8] 1412 	sub	a, #0x02
      0004F9 B0               [ 4] 1413 	or	a, b
      0004FA 20 21            [12] 1414 	jr	NZ, 00105$
      0004FC 3E 02            [ 8] 1415 	ld	a, #0x02
      0004FE 96               [ 8] 1416 	sub	a, (hl)
      0004FF 30 1C            [12] 1417 	jr	NC, 00105$
                           000501  1418 	C$player.c$194$2_0$279	= .
                                   1419 	.globl	C$player.c$194$2_0$279
                                   1420 ;src/player.c:194: depth_offset--;
      000501 21r00r00         [12] 1421 	ld	hl, #_depth_offset
      000504 35               [12] 1422 	dec	(hl)
                           000505  1423 	C$player.c$195$2_0$279	= .
                                   1424 	.globl	C$player.c$195$2_0$279
                                   1425 ;src/player.c:195: depth--;
      000505 21r00r00         [12] 1426 	ld	hl, #_depth
      000508 71               [ 8] 1427 	ld	(hl), c
                           000509  1428 	C$player.c$196$2_0$279	= .
                                   1429 	.globl	C$player.c$196$2_0$279
                                   1430 ;src/player.c:196: scroll_y_per_frame.w = - player.speed.w;
      000509 21r58r01         [12] 1431 	ld	hl, #(_player + 344)
      00050C 2A               [ 8] 1432 	ld	a, (hl+)
      00050D 4F               [ 4] 1433 	ld	c, a
      00050E 46               [ 8] 1434 	ld	b, (hl)
      00050F AF               [ 4] 1435 	xor	a, a
      000510 91               [ 4] 1436 	sub	a, c
      000511 4F               [ 4] 1437 	ld	c, a
      000512 9F               [ 4] 1438 	sbc	a, a
      000513 90               [ 4] 1439 	sub	a, b
      000514 47               [ 4] 1440 	ld	b, a
      000515 21r00r00         [12] 1441 	ld	hl, #_scroll_y_per_frame
      000518 79               [ 4] 1442 	ld	a, c
      000519 22               [ 8] 1443 	ld	(hl+), a
      00051A 70               [ 8] 1444 	ld	(hl), b
      00051B 18 1D            [12] 1445 	jr	00106$
      00051D                       1446 00105$:
                           00051D  1447 	C$player.c$197$1_0$278	= .
                                   1448 	.globl	C$player.c$197$1_0$278
                                   1449 ;src/player.c:197: } else if (depth > 1) {
      00051D 3E 01            [ 8] 1450 	ld	a, #0x01
      00051F 21r00r00         [12] 1451 	ld	hl, #_depth
      000522 96               [ 8] 1452 	sub	a, (hl)
      000523 30 1B            [12] 1453 	jr	NC, 00108$
                           000525  1454 	C$player.c$198$2_0$280	= .
                                   1455 	.globl	C$player.c$198$2_0$280
                                   1456 ;src/player.c:198: depth--;
      000525 71               [ 8] 1457 	ld	(hl), c
                           000526  1458 	C$player.c$199$2_0$280	= .
                                   1459 	.globl	C$player.c$199$2_0$280
                                   1460 ;src/player.c:199: move_y_per_frame.w = - player.speed.w;
      000526 21r58r01         [12] 1461 	ld	hl, #(_player + 344)
      000529 2A               [ 8] 1462 	ld	a, (hl+)
      00052A 4F               [ 4] 1463 	ld	c, a
      00052B 46               [ 8] 1464 	ld	b, (hl)
      00052C AF               [ 4] 1465 	xor	a, a
      00052D 91               [ 4] 1466 	sub	a, c
      00052E 4F               [ 4] 1467 	ld	c, a
      00052F 9F               [ 4] 1468 	sbc	a, a
      000530 90               [ 4] 1469 	sub	a, b
      000531 47               [ 4] 1470 	ld	b, a
      000532 21r00r00         [12] 1471 	ld	hl, #_move_y_per_frame
      000535 79               [ 4] 1472 	ld	a, c
      000536 22               [ 8] 1473 	ld	(hl+), a
      000537 70               [ 8] 1474 	ld	(hl), b
                           000538  1475 	C$player.c$200$1_0$278	= .
                                   1476 	.globl	C$player.c$200$1_0$278
                                   1477 ;src/player.c:200: } else return;
      000538 18 00            [12] 1478 	jr	00106$
      00053A                       1479 00106$:
                           00053A  1480 	C$player.c$201$1_0$278	= .
                                   1481 	.globl	C$player.c$201$1_0$278
                                   1482 ;src/player.c:201: animation_frames_left = frames;
      00053A F8 02            [12] 1483 	ldhl	sp,	#2
      00053C 7E               [ 8] 1484 	ld	a, (hl)
      00053D EAr00r00         [16] 1485 	ld	(#_animation_frames_left),a
      000540                       1486 00108$:
                           000540  1487 	C$player.c$202$1_0$278	= .
                                   1488 	.globl	C$player.c$202$1_0$278
                                   1489 ;src/player.c:202: }
      000540 E8 03            [16] 1490 	add	sp, #3
                           000542  1491 	C$player.c$202$1_0$278	= .
                                   1492 	.globl	C$player.c$202$1_0$278
                           000542  1493 	XG$move_up$0$0	= .
                                   1494 	.globl	XG$move_up$0$0
      000542 C9               [16] 1495 	ret
                           000543  1496 	G$move_down$0$0	= .
                                   1497 	.globl	G$move_down$0$0
                           000543  1498 	C$player.c$204$1_0$282	= .
                                   1499 	.globl	C$player.c$204$1_0$282
                                   1500 ;src/player.c:204: void move_down(uint8_t frames){
                                   1501 ;	---------------------------------
                                   1502 ; Function move_down
                                   1503 ; ---------------------------------
      000543                       1504 _move_down::
      000543 E8 FD            [16] 1505 	add	sp, #-3
      000545 F8 02            [12] 1506 	ldhl	sp,	#2
      000547 77               [ 8] 1507 	ld	(hl), a
                           000548  1508 	C$player.c$205$1_0$282	= .
                                   1509 	.globl	C$player.c$205$1_0$282
                                   1510 ;src/player.c:205: player.speed = calculate_speed(frames);
      000548 7E               [ 8] 1511 	ld	a, (hl)
      000549 F8 00            [12] 1512 	ldhl	sp,	#0
      00054B E5               [16] 1513 	push	hl
      00054C CDrBEr03         [24] 1514 	call	_calculate_speed
      00054F F8 00            [12] 1515 	ldhl	sp,	#0
      000551 4D               [ 4] 1516 	ld	c, l
      000552 44               [ 4] 1517 	ld	b, h
      000553 11 02 00         [12] 1518 	ld	de, #0x0002
      000556 D5               [16] 1519 	push	de
      000557 11r58r01         [12] 1520 	ld	de, #(_player + 344)
      00055A CDr00r00         [24] 1521 	call	___memcpy
                           00055D  1522 	C$player.c$206$1_0$282	= .
                                   1523 	.globl	C$player.c$206$1_0$282
                                   1524 ;src/player.c:206: if (depth - depth_offset == (8 - THRESHOLD - BOTTOM) && depth < ROWS - THRESHOLD - BOTTOM - 1) {
      00055D FAr00r00         [16] 1525 	ld	a, (#_depth)
      000560 0E 00            [ 8] 1526 	ld	c, #0x00
      000562 21r00r00         [12] 1527 	ld	hl, #_depth_offset
      000565 5E               [ 8] 1528 	ld	e, (hl)
      000566 16 00            [ 8] 1529 	ld	d, #0x00
      000568 93               [ 4] 1530 	sub	a, e
      000569 5F               [ 4] 1531 	ld	e, a
      00056A 79               [ 4] 1532 	ld	a, c
      00056B 9A               [ 4] 1533 	sbc	a, d
      00056C 47               [ 4] 1534 	ld	b, a
                           00056D  1535 	C$player.c$208$1_0$282	= .
                                   1536 	.globl	C$player.c$208$1_0$282
                                   1537 ;src/player.c:208: depth++;
      00056D 21r00r00         [12] 1538 	ld	hl, #_depth
      000570 4E               [ 8] 1539 	ld	c, (hl)
      000571 0C               [ 4] 1540 	inc	c
                           000572  1541 	C$player.c$206$1_0$282	= .
                                   1542 	.globl	C$player.c$206$1_0$282
                                   1543 ;src/player.c:206: if (depth - depth_offset == (8 - THRESHOLD - BOTTOM) && depth < ROWS - THRESHOLD - BOTTOM - 1) {
      000572 7B               [ 4] 1544 	ld	a, e
      000573 D6 06            [ 8] 1545 	sub	a, #0x06
      000575 B0               [ 4] 1546 	or	a, b
      000576 20 1B            [12] 1547 	jr	NZ, 00105$
      000578 7E               [ 8] 1548 	ld	a, (hl)
      000579 D6 5D            [ 8] 1549 	sub	a, #0x5d
      00057B 30 16            [12] 1550 	jr	NC, 00105$
                           00057D  1551 	C$player.c$207$2_0$283	= .
                                   1552 	.globl	C$player.c$207$2_0$283
                                   1553 ;src/player.c:207: depth_offset++;
      00057D 21r00r00         [12] 1554 	ld	hl, #_depth_offset
      000580 34               [12] 1555 	inc	(hl)
                           000581  1556 	C$player.c$208$2_0$283	= .
                                   1557 	.globl	C$player.c$208$2_0$283
                                   1558 ;src/player.c:208: depth++;
      000581 21r00r00         [12] 1559 	ld	hl, #_depth
      000584 71               [ 8] 1560 	ld	(hl), c
                           000585  1561 	C$player.c$209$2_0$283	= .
                                   1562 	.globl	C$player.c$209$2_0$283
                                   1563 ;src/player.c:209: scroll_y_per_frame.w = player.speed.w;
      000585 21r58r01         [12] 1564 	ld	hl, #(_player + 344)
      000588 2A               [ 8] 1565 	ld	a, (hl+)
      000589 4F               [ 4] 1566 	ld	c, a
      00058A 46               [ 8] 1567 	ld	b, (hl)
      00058B 21r00r00         [12] 1568 	ld	hl, #_scroll_y_per_frame
      00058E 79               [ 4] 1569 	ld	a, c
      00058F 22               [ 8] 1570 	ld	(hl+), a
      000590 70               [ 8] 1571 	ld	(hl), b
      000591 18 17            [12] 1572 	jr	00106$
      000593                       1573 00105$:
                           000593  1574 	C$player.c$210$1_0$282	= .
                                   1575 	.globl	C$player.c$210$1_0$282
                                   1576 ;src/player.c:210: } else if (depth < ROWS - 1) {
      000593 21r00r00         [12] 1577 	ld	hl, #_depth
      000596 7E               [ 8] 1578 	ld	a, (hl)
      000597 D6 5F            [ 8] 1579 	sub	a, #0x5f
      000599 30 15            [12] 1580 	jr	NC, 00108$
                           00059B  1581 	C$player.c$211$2_0$284	= .
                                   1582 	.globl	C$player.c$211$2_0$284
                                   1583 ;src/player.c:211: depth++;
      00059B 71               [ 8] 1584 	ld	(hl), c
                           00059C  1585 	C$player.c$212$2_0$284	= .
                                   1586 	.globl	C$player.c$212$2_0$284
                                   1587 ;src/player.c:212: move_y_per_frame.w = player.speed.w;
      00059C 21r58r01         [12] 1588 	ld	hl, #(_player + 344)
      00059F 2A               [ 8] 1589 	ld	a, (hl+)
      0005A0 4F               [ 4] 1590 	ld	c, a
      0005A1 46               [ 8] 1591 	ld	b, (hl)
      0005A2 21r00r00         [12] 1592 	ld	hl, #_move_y_per_frame
      0005A5 79               [ 4] 1593 	ld	a, c
      0005A6 22               [ 8] 1594 	ld	(hl+), a
      0005A7 70               [ 8] 1595 	ld	(hl), b
                           0005A8  1596 	C$player.c$213$1_0$282	= .
                                   1597 	.globl	C$player.c$213$1_0$282
                                   1598 ;src/player.c:213: } else return;
      0005A8 18 00            [12] 1599 	jr	00106$
      0005AA                       1600 00106$:
                           0005AA  1601 	C$player.c$214$1_0$282	= .
                                   1602 	.globl	C$player.c$214$1_0$282
                                   1603 ;src/player.c:214: animation_frames_left = frames;
      0005AA F8 02            [12] 1604 	ldhl	sp,	#2
      0005AC 7E               [ 8] 1605 	ld	a, (hl)
      0005AD EAr00r00         [16] 1606 	ld	(#_animation_frames_left),a
      0005B0                       1607 00108$:
                           0005B0  1608 	C$player.c$215$1_0$282	= .
                                   1609 	.globl	C$player.c$215$1_0$282
                                   1610 ;src/player.c:215: }
      0005B0 E8 03            [16] 1611 	add	sp, #3
                           0005B2  1612 	C$player.c$215$1_0$282	= .
                                   1613 	.globl	C$player.c$215$1_0$282
                           0005B2  1614 	XG$move_down$0$0	= .
                                   1615 	.globl	XG$move_down$0$0
      0005B2 C9               [16] 1616 	ret
                           0005B3  1617 	G$move$0$0	= .
                                   1618 	.globl	G$move$0$0
                           0005B3  1619 	C$player.c$217$1_0$286	= .
                                   1620 	.globl	C$player.c$217$1_0$286
                                   1621 ;src/player.c:217: void move(char direction, char mode){
                                   1622 ;	---------------------------------
                                   1623 ; Function move
                                   1624 ; ---------------------------------
      0005B3                       1625 _move::
      0005B3 E8 FB            [16] 1626 	add	sp, #-5
      0005B5 4F               [ 4] 1627 	ld	c, a
      0005B6 F8 04            [12] 1628 	ldhl	sp,	#4
      0005B8 73               [ 8] 1629 	ld	(hl), e
                           0005B9  1630 	C$player.c$218$1_0$286	= .
                                   1631 	.globl	C$player.c$218$1_0$286
                                   1632 ;src/player.c:218: direction_now = direction;
      0005B9 21r00r00         [12] 1633 	ld	hl, #_direction_now
                           0005BC  1634 	C$player.c$219$1_0$286	= .
                                   1635 	.globl	C$player.c$219$1_0$286
                                   1636 ;src/player.c:219: if (direction == LEFT || direction == RIGHT) direction_prev = direction;
      0005BC 79               [ 4] 1637 	ld	a,c
      0005BD 77               [ 8] 1638 	ld	(hl),a
      0005BE 3D               [ 4] 1639 	dec	a
      0005BF 3E 01            [ 8] 1640 	ld	a, #0x01
      0005C1 28 01            [12] 1641 	jr	Z, 00290$
      0005C3 AF               [ 4] 1642 	xor	a, a
      0005C4                       1643 00290$:
      0005C4 F8 00            [12] 1644 	ldhl	sp,	#0
      0005C6 77               [ 8] 1645 	ld	(hl), a
      0005C7 79               [ 4] 1646 	ld	a, c
      0005C8 D6 02            [ 8] 1647 	sub	a, #0x02
      0005CA 3E 01            [ 8] 1648 	ld	a, #0x01
      0005CC 28 01            [12] 1649 	jr	Z, 00292$
      0005CE AF               [ 4] 1650 	xor	a, a
      0005CF                       1651 00292$:
      0005CF F8 01            [12] 1652 	ldhl	sp,	#1
      0005D1 32               [ 8] 1653 	ld	(hl-), a
      0005D2 7E               [ 8] 1654 	ld	a, (hl)
      0005D3 B7               [ 4] 1655 	or	a, a
      0005D4 20 05            [12] 1656 	jr	NZ, 00101$
      0005D6 23               [ 8] 1657 	inc	hl
      0005D7 7E               [ 8] 1658 	ld	a, (hl)
      0005D8 B7               [ 4] 1659 	or	a, a
      0005D9 28 04            [12] 1660 	jr	Z, 00102$
      0005DB                       1661 00101$:
      0005DB 21r00r00         [12] 1662 	ld	hl, #_direction_prev
      0005DE 71               [ 8] 1663 	ld	(hl), c
      0005DF                       1664 00102$:
                           0005DF  1665 	C$player.c$221$2_0$287	= .
                                   1666 	.globl	C$player.c$221$2_0$287
                                   1667 ;src/player.c:221: uint8_t frames = 0;
      0005DF F8 02            [12] 1668 	ldhl	sp,	#2
      0005E1 36 00            [12] 1669 	ld	(hl), #0x00
                           0005E3  1670 	C$player.c$222$1_1$287	= .
                                   1671 	.globl	C$player.c$222$1_1$287
                                   1672 ;src/player.c:222: if (animation_frames_left == 0){
      0005E3 FAr00r00         [16] 1673 	ld	a, (#_animation_frames_left)
      0005E6 B7               [ 4] 1674 	or	a, a
      0005E7 C2r22r07         [16] 1675 	jp	NZ, 00147$
                           0005EA  1676 	C$player.c$228$1_1$286	= .
                                   1677 	.globl	C$player.c$228$1_1$286
                                   1678 ;src/player.c:228: if (direction == UP) next_tile = next_tile_up;
      0005EA 79               [ 4] 1679 	ld	a, c
      0005EB D6 03            [ 8] 1680 	sub	a, #0x03
      0005ED 3E 01            [ 8] 1681 	ld	a, #0x01
      0005EF 28 01            [12] 1682 	jr	Z, 00294$
      0005F1 AF               [ 4] 1683 	xor	a, a
      0005F2                       1684 00294$:
      0005F2 5F               [ 4] 1685 	ld	e, a
                           0005F3  1686 	C$player.c$229$1_1$286	= .
                                   1687 	.globl	C$player.c$229$1_1$286
                                   1688 ;src/player.c:229: if (direction == DOWN) next_tile = next_tile_down;
      0005F3 79               [ 4] 1689 	ld	a, c
      0005F4 D6 04            [ 8] 1690 	sub	a, #0x04
      0005F6 3E 01            [ 8] 1691 	ld	a, #0x01
      0005F8 28 01            [12] 1692 	jr	Z, 00296$
      0005FA AF               [ 4] 1693 	xor	a, a
      0005FB                       1694 00296$:
      0005FB F8 03            [12] 1695 	ldhl	sp,	#3
                           0005FD  1696 	C$player.c$223$2_1$288	= .
                                   1697 	.globl	C$player.c$223$2_1$288
                                   1698 ;src/player.c:223: if (mode == DRILL) {
      0005FD 22               [ 8] 1699 	ld	(hl+), a
      0005FE 7E               [ 8] 1700 	ld	a, (hl)
      0005FF 3D               [ 4] 1701 	dec	a
      000600 20 43            [12] 1702 	jr	NZ, 00135$
                           000602  1703 	C$player.c$224$3_1$289	= .
                                   1704 	.globl	C$player.c$224$3_1$289
                                   1705 ;src/player.c:224: is_drilling = TRUE;
      000602 21r00r00         [12] 1706 	ld	hl, #_is_drilling
      000605 36 01            [12] 1707 	ld	(hl), #0x01
                           000607  1708 	C$player.c$225$3_1$289	= .
                                   1709 	.globl	C$player.c$225$3_1$289
                                   1710 ;src/player.c:225: velocity = 0;
      000607 21r00r00         [12] 1711 	ld	hl, #_velocity
      00060A 36 00            [12] 1712 	ld	(hl), #0x00
                           00060C  1713 	C$player.c$226$3_1$289	= .
                                   1714 	.globl	C$player.c$226$3_1$289
                                   1715 ;src/player.c:226: if (direction == LEFT) next_tile = next_tile_left;
      00060C F8 00            [12] 1716 	ldhl	sp,	#0
      00060E 7E               [ 8] 1717 	ld	a, (hl)
      00060F B7               [ 4] 1718 	or	a, a
      000610 28 06            [12] 1719 	jr	Z, 00105$
      000612 FAr00r00         [16] 1720 	ld	a, (#_next_tile_left)
      000615 EAr00r00         [16] 1721 	ld	(#_next_tile),a
      000618                       1722 00105$:
                           000618  1723 	C$player.c$227$3_1$289	= .
                                   1724 	.globl	C$player.c$227$3_1$289
                                   1725 ;src/player.c:227: if (direction == RIGHT) next_tile = next_tile_right;
      000618 F8 01            [12] 1726 	ldhl	sp,	#1
      00061A 7E               [ 8] 1727 	ld	a, (hl)
      00061B B7               [ 4] 1728 	or	a, a
      00061C 28 06            [12] 1729 	jr	Z, 00107$
      00061E FAr00r00         [16] 1730 	ld	a, (#_next_tile_right)
      000621 EAr00r00         [16] 1731 	ld	(#_next_tile),a
      000624                       1732 00107$:
                           000624  1733 	C$player.c$228$3_1$289	= .
                                   1734 	.globl	C$player.c$228$3_1$289
                                   1735 ;src/player.c:228: if (direction == UP) next_tile = next_tile_up;
      000624 7B               [ 4] 1736 	ld	a, e
      000625 B7               [ 4] 1737 	or	a, a
      000626 28 06            [12] 1738 	jr	Z, 00109$
      000628 FAr00r00         [16] 1739 	ld	a, (#_next_tile_up)
      00062B EAr00r00         [16] 1740 	ld	(#_next_tile),a
      00062E                       1741 00109$:
                           00062E  1742 	C$player.c$229$3_1$289	= .
                                   1743 	.globl	C$player.c$229$3_1$289
                                   1744 ;src/player.c:229: if (direction == DOWN) next_tile = next_tile_down;
      00062E F8 03            [12] 1745 	ldhl	sp,	#3
      000630 7E               [ 8] 1746 	ld	a, (hl)
      000631 B7               [ 4] 1747 	or	a, a
      000632 28 06            [12] 1748 	jr	Z, 00111$
      000634 FAr00r00         [16] 1749 	ld	a, (#_next_tile_down)
      000637 EAr00r00         [16] 1750 	ld	(#_next_tile),a
      00063A                       1751 00111$:
                           00063A  1752 	C$player.c$230$3_1$289	= .
                                   1753 	.globl	C$player.c$230$3_1$289
                                   1754 ;src/player.c:230: frames = calculate_frames();
      00063A C5               [16] 1755 	push	bc
      00063B CDr98r03         [24] 1756 	call	_calculate_frames
      00063E F8 04            [12] 1757 	ldhl	sp,	#4
      000640 77               [ 8] 1758 	ld	(hl), a
      000641 C1               [12] 1759 	pop	bc
      000642 C3rF1r06         [16] 1760 	jp	00136$
      000645                       1761 00135$:
                           000645  1762 	C$player.c$231$2_1$288	= .
                                   1763 	.globl	C$player.c$231$2_1$288
                                   1764 ;src/player.c:231: } else if (mode == DRIVE) {
      000645 F8 04            [12] 1765 	ldhl	sp,	#4
      000647 7E               [ 8] 1766 	ld	a, (hl)
      000648 D6 02            [ 8] 1767 	sub	a, #0x02
      00064A 20 0C            [12] 1768 	jr	NZ, 00132$
                           00064C  1769 	C$player.c$232$3_1$290	= .
                                   1770 	.globl	C$player.c$232$3_1$290
                                   1771 ;src/player.c:232: velocity = 0;
      00064C 21r00r00         [12] 1772 	ld	hl, #_velocity
      00064F 36 00            [12] 1773 	ld	(hl), #0x00
                           000651  1774 	C$player.c$233$3_1$290	= .
                                   1775 	.globl	C$player.c$233$3_1$290
                                   1776 ;src/player.c:233: frames = 16;
      000651 F8 02            [12] 1777 	ldhl	sp,	#2
      000653 36 10            [12] 1778 	ld	(hl), #0x10
      000655 C3rF1r06         [16] 1779 	jp	00136$
      000658                       1780 00132$:
                           000658  1781 	C$player.c$234$2_1$288	= .
                                   1782 	.globl	C$player.c$234$2_1$288
                                   1783 ;src/player.c:234: } else if (mode == ACCELERATE) {
      000658 F8 04            [12] 1784 	ldhl	sp,	#4
      00065A 7E               [ 8] 1785 	ld	a, (hl)
      00065B D6 03            [ 8] 1786 	sub	a, #0x03
      00065D C2rF1r06         [16] 1787 	jp	NZ,00136$
                           000660  1788 	C$player.c$235$3_1$291	= .
                                   1789 	.globl	C$player.c$235$3_1$291
                                   1790 ;src/player.c:235: if (next_tile_up != EMPTY) velocity = 0;
      000660 FAr00r00         [16] 1791 	ld	a, (#_next_tile_up)
      000663 B7               [ 4] 1792 	or	a, a
      000664 28 05            [12] 1793 	jr	Z, 00113$
      000666 21r00r00         [12] 1794 	ld	hl, #_velocity
      000669 36 00            [12] 1795 	ld	(hl), #0x00
      00066B                       1796 00113$:
                           00066B  1797 	C$player.c$236$3_1$291	= .
                                   1798 	.globl	C$player.c$236$3_1$291
                                   1799 ;src/player.c:236: if (direction == DOWN) {
      00066B F8 03            [12] 1800 	ldhl	sp,	#3
      00066D 7E               [ 8] 1801 	ld	a, (hl)
      00066E B7               [ 4] 1802 	or	a, a
      00066F 28 15            [12] 1803 	jr	Z, 00123$
                           000671  1804 	C$player.c$239$1_1$286	= .
                                   1805 	.globl	C$player.c$239$1_1$286
                                   1806 ;src/player.c:239: velocity++;
      000671 21r00r00         [12] 1807 	ld	hl, #_velocity
      000674 46               [ 8] 1808 	ld	b, (hl)
      000675 04               [ 4] 1809 	inc	b
                           000676  1810 	C$player.c$237$4_1$292	= .
                                   1811 	.globl	C$player.c$237$4_1$292
                                   1812 ;src/player.c:237: if (velocity < 0) {
      000676 CB 7E            [12] 1813 	bit	7, (hl)
      000678 28 06            [12] 1814 	jr	Z, 00115$
                           00067A  1815 	C$player.c$238$5_1$293	= .
                                   1816 	.globl	C$player.c$238$5_1$293
                                   1817 ;src/player.c:238: direction = UP;
      00067A 0E 03            [ 8] 1818 	ld	c, #0x03
                           00067C  1819 	C$player.c$239$5_1$293	= .
                                   1820 	.globl	C$player.c$239$5_1$293
                                   1821 ;src/player.c:239: velocity++;
      00067C 70               [ 8] 1822 	ld	(hl), b
                           00067D  1823 	C$player.c$240$5_1$293	= .
                                   1824 	.globl	C$player.c$240$5_1$293
                                   1825 ;src/player.c:240: velocity++;
      00067D 34               [12] 1826 	inc	(hl)
      00067E 18 32            [12] 1827 	jr	00124$
      000680                       1828 00115$:
                           000680  1829 	C$player.c$242$5_1$294	= .
                                   1830 	.globl	C$player.c$242$5_1$294
                                   1831 ;src/player.c:242: velocity++;
      000680 21r00r00         [12] 1832 	ld	hl, #_velocity
      000683 70               [ 8] 1833 	ld	(hl), b
      000684 18 2C            [12] 1834 	jr	00124$
      000686                       1835 00123$:
                           000686  1836 	C$player.c$244$3_1$291	= .
                                   1837 	.globl	C$player.c$244$3_1$291
                                   1838 ;src/player.c:244: } else if (direction == UP) {
      000686 7B               [ 4] 1839 	ld	a, e
      000687 B7               [ 4] 1840 	or	a, a
      000688 28 28            [12] 1841 	jr	Z, 00124$
                           00068A  1842 	C$player.c$247$1_1$286	= .
                                   1843 	.globl	C$player.c$247$1_1$286
                                   1844 ;src/player.c:247: velocity--;
      00068A 21r00r00         [12] 1845 	ld	hl, #_velocity
      00068D 46               [ 8] 1846 	ld	b, (hl)
      00068E 05               [ 4] 1847 	dec	b
                           00068F  1848 	C$player.c$245$4_1$295	= .
                                   1849 	.globl	C$player.c$245$4_1$295
                                   1850 ;src/player.c:245: if (velocity > 0) {
      00068F 5E               [ 8] 1851 	ld	e, (hl)
      000690 AF               [ 4] 1852 	xor	a, a
      000691 57               [ 4] 1853 	ld	d, a
      000692 96               [ 8] 1854 	sub	a, (hl)
      000693 CB 7B            [ 8] 1855 	bit	7, e
      000695 28 07            [12] 1856 	jr	Z, 00303$
      000697 CB 7A            [ 8] 1857 	bit	7, d
      000699 20 08            [12] 1858 	jr	NZ, 00304$
      00069B BF               [ 4] 1859 	cp	a, a
      00069C 18 05            [12] 1860 	jr	00304$
      00069E                       1861 00303$:
      00069E CB 7A            [ 8] 1862 	bit	7, d
      0006A0 28 01            [12] 1863 	jr	Z, 00304$
      0006A2 37               [ 4] 1864 	scf
      0006A3                       1865 00304$:
      0006A3 30 09            [12] 1866 	jr	NC, 00118$
                           0006A5  1867 	C$player.c$246$5_1$296	= .
                                   1868 	.globl	C$player.c$246$5_1$296
                                   1869 ;src/player.c:246: direction = DOWN;
      0006A5 0E 04            [ 8] 1870 	ld	c, #0x04
                           0006A7  1871 	C$player.c$247$5_1$296	= .
                                   1872 	.globl	C$player.c$247$5_1$296
                                   1873 ;src/player.c:247: velocity--;
      0006A7 21r00r00         [12] 1874 	ld	hl, #_velocity
      0006AA 70               [ 8] 1875 	ld	(hl), b
                           0006AB  1876 	C$player.c$248$5_1$296	= .
                                   1877 	.globl	C$player.c$248$5_1$296
                                   1878 ;src/player.c:248: velocity--;
      0006AB 35               [12] 1879 	dec	(hl)
      0006AC 18 04            [12] 1880 	jr	00124$
      0006AE                       1881 00118$:
                           0006AE  1882 	C$player.c$250$5_1$297	= .
                                   1883 	.globl	C$player.c$250$5_1$297
                                   1884 ;src/player.c:250: velocity--;
      0006AE 21r00r00         [12] 1885 	ld	hl, #_velocity
      0006B1 70               [ 8] 1886 	ld	(hl), b
      0006B2                       1887 00124$:
                           0006B2  1888 	C$player.c$253$3_1$291	= .
                                   1889 	.globl	C$player.c$253$3_1$291
                                   1890 ;src/player.c:253: if (velocity >= 12) velocity = 12;
      0006B2 21r00r00         [12] 1891 	ld	hl, #_velocity
      0006B5 7E               [ 8] 1892 	ld	a, (hl)
      0006B6 EE 80            [ 8] 1893 	xor	a, #0x80
      0006B8 D6 8C            [ 8] 1894 	sub	a, #0x8c
      0006BA 38 02            [12] 1895 	jr	C, 00126$
      0006BC 36 0C            [12] 1896 	ld	(hl), #0x0c
      0006BE                       1897 00126$:
                           0006BE  1898 	C$player.c$254$3_1$291	= .
                                   1899 	.globl	C$player.c$254$3_1$291
                                   1900 ;src/player.c:254: if (velocity <= -6) velocity = -6;
      0006BE 21r00r00         [12] 1901 	ld	hl, #_velocity
      0006C1 5E               [ 8] 1902 	ld	e, (hl)
      0006C2 3E FA            [ 8] 1903 	ld	a,#0xfa
      0006C4 57               [ 4] 1904 	ld	d,a
      0006C5 96               [ 8] 1905 	sub	a, (hl)
      0006C6 CB 7B            [ 8] 1906 	bit	7, e
      0006C8 28 07            [12] 1907 	jr	Z, 00305$
      0006CA CB 7A            [ 8] 1908 	bit	7, d
      0006CC 20 08            [12] 1909 	jr	NZ, 00306$
      0006CE BF               [ 4] 1910 	cp	a, a
      0006CF 18 05            [12] 1911 	jr	00306$
      0006D1                       1912 00305$:
      0006D1 CB 7A            [ 8] 1913 	bit	7, d
      0006D3 28 01            [12] 1914 	jr	Z, 00306$
      0006D5 37               [ 4] 1915 	scf
      0006D6                       1916 00306$:
      0006D6 38 05            [12] 1917 	jr	C, 00128$
      0006D8 21r00r00         [12] 1918 	ld	hl, #_velocity
      0006DB 36 FA            [12] 1919 	ld	(hl), #0xfa
      0006DD                       1920 00128$:
                           0006DD  1921 	C$player.c$255$3_1$291	= .
                                   1922 	.globl	C$player.c$255$3_1$291
                                   1923 ;src/player.c:255: frames = 16 - abs(velocity);
      0006DD FAr00r00         [16] 1924 	ld	a, (#_velocity)
      0006E0 5F               [ 4] 1925 	ld	e, a
      0006E1 07               [ 4] 1926 	rlca
      0006E2 9F               [ 4] 1927 	sbc	a, a
      0006E3 C5               [16] 1928 	push	bc
      0006E4 57               [ 4] 1929 	ld	d, a
      0006E5 D5               [16] 1930 	push	de
      0006E6 CDr00r00         [24] 1931 	call	_abs
      0006E9 E1               [12] 1932 	pop	hl
      0006EA C1               [12] 1933 	pop	bc
      0006EB 3E 10            [ 8] 1934 	ld	a, #0x10
      0006ED 93               [ 4] 1935 	sub	a, e
      0006EE F8 02            [12] 1936 	ldhl	sp,	#2
      0006F0 77               [ 8] 1937 	ld	(hl), a
      0006F1                       1938 00136$:
                           0006F1  1939 	C$player.c$258$2_1$288	= .
                                   1940 	.globl	C$player.c$258$2_1$288
                                   1941 ;src/player.c:258: if (direction == LEFT) move_left(frames);
      0006F1 79               [ 4] 1942 	ld	a, c
      0006F2 3D               [ 4] 1943 	dec	a
      0006F3 20 08            [12] 1944 	jr	NZ, 00138$
      0006F5 C5               [16] 1945 	push	bc
      0006F6 F8 04            [12] 1946 	ldhl	sp,	#4
      0006F8 7E               [ 8] 1947 	ld	a, (hl)
      0006F9 CDrDCr03         [24] 1948 	call	_move_left
      0006FC C1               [12] 1949 	pop	bc
      0006FD                       1950 00138$:
                           0006FD  1951 	C$player.c$259$2_1$288	= .
                                   1952 	.globl	C$player.c$259$2_1$288
                                   1953 ;src/player.c:259: if (direction == RIGHT) move_right(frames);
      0006FD 79               [ 4] 1954 	ld	a, c
      0006FE D6 02            [ 8] 1955 	sub	a, #0x02
      000700 20 08            [12] 1956 	jr	NZ, 00140$
      000702 C5               [16] 1957 	push	bc
      000703 F8 04            [12] 1958 	ldhl	sp,	#4
      000705 7E               [ 8] 1959 	ld	a, (hl)
      000706 CDr57r04         [24] 1960 	call	_move_right
      000709 C1               [12] 1961 	pop	bc
      00070A                       1962 00140$:
                           00070A  1963 	C$player.c$260$2_1$288	= .
                                   1964 	.globl	C$player.c$260$2_1$288
                                   1965 ;src/player.c:260: if (direction == UP) move_up(frames);
      00070A 79               [ 4] 1966 	ld	a, c
      00070B D6 03            [ 8] 1967 	sub	a, #0x03
      00070D 20 08            [12] 1968 	jr	NZ, 00142$
      00070F C5               [16] 1969 	push	bc
      000710 F8 04            [12] 1970 	ldhl	sp,	#4
      000712 7E               [ 8] 1971 	ld	a, (hl)
      000713 CDrC7r04         [24] 1972 	call	_move_up
      000716 C1               [12] 1973 	pop	bc
      000717                       1974 00142$:
                           000717  1975 	C$player.c$261$2_1$288	= .
                                   1976 	.globl	C$player.c$261$2_1$288
                                   1977 ;src/player.c:261: if (direction == DOWN) move_down(frames);
      000717 79               [ 4] 1978 	ld	a, c
      000718 D6 04            [ 8] 1979 	sub	a, #0x04
      00071A 20 06            [12] 1980 	jr	NZ, 00147$
      00071C F8 02            [12] 1981 	ldhl	sp,	#2
      00071E 7E               [ 8] 1982 	ld	a, (hl)
      00071F CDr43r05         [24] 1983 	call	_move_down
      000722                       1984 00147$:
                           000722  1985 	C$player.c$263$1_1$286	= .
                                   1986 	.globl	C$player.c$263$1_1$286
                                   1987 ;src/player.c:263: }
      000722 E8 05            [16] 1988 	add	sp, #5
                           000724  1989 	C$player.c$263$1_1$286	= .
                                   1990 	.globl	C$player.c$263$1_1$286
                           000724  1991 	XG$move$0$0	= .
                                   1992 	.globl	XG$move$0$0
      000724 C9               [16] 1993 	ret
                           000725  1994 	G$initiate_movement$0$0	= .
                                   1995 	.globl	G$initiate_movement$0$0
                           000725  1996 	C$player.c$265$1_1$299	= .
                                   1997 	.globl	C$player.c$265$1_1$299
                                   1998 ;src/player.c:265: void initiate_movement(void) {
                                   1999 ;	---------------------------------
                                   2000 ; Function initiate_movement
                                   2001 ; ---------------------------------
      000725                       2002 _initiate_movement::
                           000725  2003 	C$player.c$266$1_0$299	= .
                                   2004 	.globl	C$player.c$266$1_0$299
                                   2005 ;src/player.c:266: if (buttons & J_LEFT) {
      000725 FAr00r00         [16] 2006 	ld	a, (#_buttons)
      000728 CB 4F            [ 8] 2007 	bit	1, a
      00072A 28 2E            [12] 2008 	jr	Z, 00110$
                           00072C  2009 	C$player.c$267$2_0$300	= .
                                   2010 	.globl	C$player.c$267$2_0$300
                                   2011 ;src/player.c:267: if (next_tile_left != EMPTY && next_tile_left != STONE && next_tile_down != EMPTY) {
      00072C 21r00r00         [12] 2012 	ld	hl, #_next_tile_left
      00072F 7E               [ 8] 2013 	ld	a, (hl)
      000730 B7               [ 4] 2014 	or	a, a
      000731 28 13            [12] 2015 	jr	Z, 00105$
      000733 7E               [ 8] 2016 	ld	a, (hl)
      000734 D6 03            [ 8] 2017 	sub	a, #0x03
      000736 28 0E            [12] 2018 	jr	Z, 00105$
      000738 FAr00r00         [16] 2019 	ld	a, (#_next_tile_down)
      00073B B7               [ 4] 2020 	or	a, a
      00073C 28 08            [12] 2021 	jr	Z, 00105$
                           00073E  2022 	C$player.c$268$3_0$301	= .
                                   2023 	.globl	C$player.c$268$3_0$301
                                   2024 ;src/player.c:268: move(LEFT, DRILL);
      00073E 3E 01            [ 8] 2025 	ld	a,#0x01
      000740 5F               [ 4] 2026 	ld	e,a
      000741 CDrB3r05         [24] 2027 	call	_move
      000744 18 14            [12] 2028 	jr	00110$
      000746                       2029 00105$:
                           000746  2030 	C$player.c$269$2_0$300	= .
                                   2031 	.globl	C$player.c$269$2_0$300
                                   2032 ;src/player.c:269: } else if (next_tile_left == EMPTY) {
      000746 FAr00r00         [16] 2033 	ld	a, (#_next_tile_left)
      000749 B7               [ 4] 2034 	or	a, a
      00074A 20 09            [12] 2035 	jr	NZ, 00102$
                           00074C  2036 	C$player.c$270$3_0$302	= .
                                   2037 	.globl	C$player.c$270$3_0$302
                                   2038 ;src/player.c:270: move(LEFT, DRIVE);
      00074C 1E 02            [ 8] 2039 	ld	e, #0x02
      00074E 3E 01            [ 8] 2040 	ld	a, #0x01
      000750 CDrB3r05         [24] 2041 	call	_move
      000753 18 05            [12] 2042 	jr	00110$
      000755                       2043 00102$:
                           000755  2044 	C$player.c$271$2_0$300	= .
                                   2045 	.globl	C$player.c$271$2_0$300
                                   2046 ;src/player.c:271: } else direction_prev = LEFT;
      000755 21r00r00         [12] 2047 	ld	hl, #_direction_prev
      000758 36 01            [12] 2048 	ld	(hl), #0x01
      00075A                       2049 00110$:
                           00075A  2050 	C$player.c$273$1_0$299	= .
                                   2051 	.globl	C$player.c$273$1_0$299
                                   2052 ;src/player.c:273: if (buttons & J_RIGHT) { 
      00075A FAr00r00         [16] 2053 	ld	a, (#_buttons)
      00075D 0F               [ 4] 2054 	rrca
      00075E 30 2E            [12] 2055 	jr	NC, 00120$
                           000760  2056 	C$player.c$274$2_0$303	= .
                                   2057 	.globl	C$player.c$274$2_0$303
                                   2058 ;src/player.c:274: if (next_tile_right != EMPTY && next_tile_right != STONE && next_tile_down != EMPTY) {
      000760 21r00r00         [12] 2059 	ld	hl, #_next_tile_right
      000763 7E               [ 8] 2060 	ld	a, (hl)
      000764 B7               [ 4] 2061 	or	a, a
      000765 28 14            [12] 2062 	jr	Z, 00115$
      000767 7E               [ 8] 2063 	ld	a, (hl)
      000768 D6 03            [ 8] 2064 	sub	a, #0x03
      00076A 28 0F            [12] 2065 	jr	Z, 00115$
      00076C FAr00r00         [16] 2066 	ld	a, (#_next_tile_down)
      00076F B7               [ 4] 2067 	or	a, a
      000770 28 09            [12] 2068 	jr	Z, 00115$
                           000772  2069 	C$player.c$275$3_0$304	= .
                                   2070 	.globl	C$player.c$275$3_0$304
                                   2071 ;src/player.c:275: move(RIGHT, DRILL);
      000772 1E 01            [ 8] 2072 	ld	e, #0x01
      000774 3E 02            [ 8] 2073 	ld	a, #0x02
      000776 CDrB3r05         [24] 2074 	call	_move
      000779 18 13            [12] 2075 	jr	00120$
      00077B                       2076 00115$:
                           00077B  2077 	C$player.c$276$2_0$303	= .
                                   2078 	.globl	C$player.c$276$2_0$303
                                   2079 ;src/player.c:276: } else if (next_tile_right == EMPTY) {
      00077B FAr00r00         [16] 2080 	ld	a, (#_next_tile_right)
      00077E B7               [ 4] 2081 	or	a, a
      00077F 20 08            [12] 2082 	jr	NZ, 00112$
                           000781  2083 	C$player.c$277$3_0$305	= .
                                   2084 	.globl	C$player.c$277$3_0$305
                                   2085 ;src/player.c:277: move(RIGHT, DRIVE);
      000781 3E 02            [ 8] 2086 	ld	a,#0x02
      000783 5F               [ 4] 2087 	ld	e,a
      000784 CDrB3r05         [24] 2088 	call	_move
      000787 18 05            [12] 2089 	jr	00120$
      000789                       2090 00112$:
                           000789  2091 	C$player.c$278$2_0$303	= .
                                   2092 	.globl	C$player.c$278$2_0$303
                                   2093 ;src/player.c:278: } else direction_prev = RIGHT;
      000789 21r00r00         [12] 2094 	ld	hl, #_direction_prev
      00078C 36 02            [12] 2095 	ld	(hl), #0x02
      00078E                       2096 00120$:
                           00078E  2097 	C$player.c$280$1_0$299	= .
                                   2098 	.globl	C$player.c$280$1_0$299
                                   2099 ;src/player.c:280: if (buttons & J_DOWN) { 
      00078E FAr00r00         [16] 2100 	ld	a, (#_buttons)
      000791 CB 5F            [ 8] 2101 	bit	3, a
      000793 28 13            [12] 2102 	jr	Z, 00125$
                           000795  2103 	C$player.c$281$2_0$306	= .
                                   2104 	.globl	C$player.c$281$2_0$306
                                   2105 ;src/player.c:281: if (next_tile_down != EMPTY && next_tile_down != STONE){
      000795 21r00r00         [12] 2106 	ld	hl, #_next_tile_down
      000798 7E               [ 8] 2107 	ld	a, (hl)
      000799 B7               [ 4] 2108 	or	a, a
      00079A 28 0C            [12] 2109 	jr	Z, 00125$
      00079C 7E               [ 8] 2110 	ld	a, (hl)
      00079D D6 03            [ 8] 2111 	sub	a, #0x03
      00079F 28 07            [12] 2112 	jr	Z, 00125$
                           0007A1  2113 	C$player.c$282$3_0$307	= .
                                   2114 	.globl	C$player.c$282$3_0$307
                                   2115 ;src/player.c:282: move(DOWN, DRILL);
      0007A1 1E 01            [ 8] 2116 	ld	e, #0x01
      0007A3 3E 04            [ 8] 2117 	ld	a, #0x04
      0007A5 CDrB3r05         [24] 2118 	call	_move
      0007A8                       2119 00125$:
                           0007A8  2120 	C$player.c$285$1_0$299	= .
                                   2121 	.globl	C$player.c$285$1_0$299
                                   2122 ;src/player.c:285: if (next_tile_up == EMPTY && (buttons & J_UP )) {
      0007A8 FAr00r00         [16] 2123 	ld	a, (#_next_tile_up)
      0007AB B7               [ 4] 2124 	or	a, a
      0007AC 20 0D            [12] 2125 	jr	NZ, 00127$
      0007AE FAr00r00         [16] 2126 	ld	a, (#_buttons)
      0007B1 CB 57            [ 8] 2127 	bit	2, a
      0007B3 28 06            [12] 2128 	jr	Z, 00127$
                           0007B5  2129 	C$player.c$286$2_0$308	= .
                                   2130 	.globl	C$player.c$286$2_0$308
                                   2131 ;src/player.c:286: move(UP, ACCELERATE);
      0007B5 3E 03            [ 8] 2132 	ld	a,#0x03
      0007B7 5F               [ 4] 2133 	ld	e,a
      0007B8 CDrB3r05         [24] 2134 	call	_move
      0007BB                       2135 00127$:
                           0007BB  2136 	C$player.c$288$1_0$299	= .
                                   2137 	.globl	C$player.c$288$1_0$299
                                   2138 ;src/player.c:288: if (next_tile_down == EMPTY && !(buttons & J_UP)) {
      0007BB FAr00r00         [16] 2139 	ld	a, (#_next_tile_down)
      0007BE B7               [ 4] 2140 	or	a, a
      0007BF C0               [20] 2141 	ret	NZ
      0007C0 21r00r00         [12] 2142 	ld	hl, #_buttons
      0007C3 7E               [ 8] 2143 	ld	a, (hl)
      0007C4 CB 57            [ 8] 2144 	bit	2, a
      0007C6 C0               [20] 2145 	ret	NZ
                           0007C7  2146 	C$player.c$289$2_0$309	= .
                                   2147 	.globl	C$player.c$289$2_0$309
                                   2148 ;src/player.c:289: move(DOWN, ACCELERATE);
      0007C7 1E 03            [ 8] 2149 	ld	e, #0x03
      0007C9 3E 04            [ 8] 2150 	ld	a, #0x04
                           0007CB  2151 	C$player.c$291$1_0$299	= .
                                   2152 	.globl	C$player.c$291$1_0$299
                                   2153 ;src/player.c:291: }
                           0007CB  2154 	C$player.c$291$1_0$299	= .
                                   2155 	.globl	C$player.c$291$1_0$299
                           0007CB  2156 	XG$initiate_movement$0$0	= .
                                   2157 	.globl	XG$initiate_movement$0$0
      0007CB C3rB3r05         [16] 2158 	jp	_move
                           0007CE  2159 	G$calculate_falldamage$0$0	= .
                                   2160 	.globl	G$calculate_falldamage$0$0
                           0007CE  2161 	C$player.c$293$1_0$311	= .
                                   2162 	.globl	C$player.c$293$1_0$311
                                   2163 ;src/player.c:293: void calculate_falldamage(void){
                                   2164 ;	---------------------------------
                                   2165 ; Function calculate_falldamage
                                   2166 ; ---------------------------------
      0007CE                       2167 _calculate_falldamage::
                           0007CE  2168 	C$player.c$294$1_0$311	= .
                                   2169 	.globl	C$player.c$294$1_0$311
                                   2170 ;src/player.c:294: if (next_tile_down != EMPTY && velocity > 4) {
      0007CE 21r00r00         [12] 2171 	ld	hl, #_velocity
      0007D1 5E               [ 8] 2172 	ld	e, (hl)
      0007D2 3E 04            [ 8] 2173 	ld	a,#0x04
      0007D4 57               [ 4] 2174 	ld	d,a
      0007D5 96               [ 8] 2175 	sub	a, (hl)
      0007D6 CB 7B            [ 8] 2176 	bit	7, e
      0007D8 28 07            [12] 2177 	jr	Z, 00146$
      0007DA CB 7A            [ 8] 2178 	bit	7, d
      0007DC 20 08            [12] 2179 	jr	NZ, 00147$
      0007DE BF               [ 4] 2180 	cp	a, a
      0007DF 18 05            [12] 2181 	jr	00147$
      0007E1                       2182 00146$:
      0007E1 CB 7A            [ 8] 2183 	bit	7, d
      0007E3 28 01            [12] 2184 	jr	Z, 00147$
      0007E5 37               [ 4] 2185 	scf
      0007E6                       2186 00147$:
      0007E6 3E 00            [ 8] 2187 	ld	a, #0x00
      0007E8 17               [ 4] 2188 	rla
      0007E9 4F               [ 4] 2189 	ld	c, a
      0007EA FAr00r00         [16] 2190 	ld	a, (#_next_tile_down)
      0007ED B7               [ 4] 2191 	or	a, a
      0007EE 28 23            [12] 2192 	jr	Z, 00106$
      0007F0 79               [ 4] 2193 	ld	a, c
      0007F1 B7               [ 4] 2194 	or	a, a
      0007F2 28 1F            [12] 2195 	jr	Z, 00106$
                           0007F4  2196 	C$player.c$295$2_0$312	= .
                                   2197 	.globl	C$player.c$295$2_0$312
                                   2198 ;src/player.c:295: player.hull.current_value -= velocity;
      0007F4 21r49r00         [12] 2199 	ld	hl, #(_player + 73)
      0007F7 2A               [ 8] 2200 	ld	a, (hl+)
      0007F8 4F               [ 4] 2201 	ld	c, a
      0007F9 46               [ 8] 2202 	ld	b, (hl)
      0007FA FAr00r00         [16] 2203 	ld	a, (#_velocity)
      0007FD 5F               [ 4] 2204 	ld	e, a
      0007FE 07               [ 4] 2205 	rlca
      0007FF 9F               [ 4] 2206 	sbc	a, a
      000800 57               [ 4] 2207 	ld	d, a
      000801 79               [ 4] 2208 	ld	a, c
      000802 93               [ 4] 2209 	sub	a, e
      000803 4F               [ 4] 2210 	ld	c, a
      000804 78               [ 4] 2211 	ld	a, b
      000805 9A               [ 4] 2212 	sbc	a, d
      000806 47               [ 4] 2213 	ld	b, a
      000807 21r49r00         [12] 2214 	ld	hl, #(_player + 73)
      00080A 79               [ 4] 2215 	ld	a, c
      00080B 22               [ 8] 2216 	ld	(hl+), a
      00080C 70               [ 8] 2217 	ld	(hl), b
                           00080D  2218 	C$player.c$296$2_0$312	= .
                                   2219 	.globl	C$player.c$296$2_0$312
                                   2220 ;src/player.c:296: velocity = 0;
      00080D 21r00r00         [12] 2221 	ld	hl, #_velocity
      000810 36 00            [12] 2222 	ld	(hl), #0x00
      000812 C9               [16] 2223 	ret
      000813                       2224 00106$:
                           000813  2225 	C$player.c$297$1_0$311	= .
                                   2226 	.globl	C$player.c$297$1_0$311
                                   2227 ;src/player.c:297: } else if (next_tile_down != EMPTY && velocity <= 4 && velocity > 0){
      000813 FAr00r00         [16] 2228 	ld	a, (#_next_tile_down)
      000816 B7               [ 4] 2229 	or	a, a
      000817 C8               [20] 2230 	ret	Z
      000818 CB 41            [ 8] 2231 	bit	0, c
      00081A C0               [20] 2232 	ret	NZ
      00081B 21r00r00         [12] 2233 	ld	hl, #_velocity
      00081E 5E               [ 8] 2234 	ld	e, (hl)
      00081F AF               [ 4] 2235 	xor	a, a
      000820 57               [ 4] 2236 	ld	d, a
      000821 96               [ 8] 2237 	sub	a, (hl)
      000822 CB 7B            [ 8] 2238 	bit	7, e
      000824 28 07            [12] 2239 	jr	Z, 00148$
      000826 CB 7A            [ 8] 2240 	bit	7, d
      000828 20 08            [12] 2241 	jr	NZ, 00149$
      00082A BF               [ 4] 2242 	cp	a, a
      00082B 18 05            [12] 2243 	jr	00149$
      00082D                       2244 00148$:
      00082D CB 7A            [ 8] 2245 	bit	7, d
      00082F 28 01            [12] 2246 	jr	Z, 00149$
      000831 37               [ 4] 2247 	scf
      000832                       2248 00149$:
      000832 D0               [20] 2249 	ret	NC
                           000833  2250 	C$player.c$298$2_0$313	= .
                                   2251 	.globl	C$player.c$298$2_0$313
                                   2252 ;src/player.c:298: velocity = 0;
      000833 21r00r00         [12] 2253 	ld	hl, #_velocity
      000836 36 00            [12] 2254 	ld	(hl), #0x00
                           000838  2255 	C$player.c$300$1_0$311	= .
                                   2256 	.globl	C$player.c$300$1_0$311
                                   2257 ;src/player.c:300: }
                           000838  2258 	C$player.c$300$1_0$311	= .
                                   2259 	.globl	C$player.c$300$1_0$311
                           000838  2260 	XG$calculate_falldamage$0$0	= .
                                   2261 	.globl	XG$calculate_falldamage$0$0
      000838 C9               [16] 2262 	ret
                           000839  2263 	G$check_hull$0$0	= .
                                   2264 	.globl	G$check_hull$0$0
                           000839  2265 	C$player.c$302$1_0$315	= .
                                   2266 	.globl	C$player.c$302$1_0$315
                                   2267 ;src/player.c:302: void check_hull(void){
                                   2268 ;	---------------------------------
                                   2269 ; Function check_hull
                                   2270 ; ---------------------------------
      000839                       2271 _check_hull::
                           000839  2272 	C$player.c$303$1_0$315	= .
                                   2273 	.globl	C$player.c$303$1_0$315
                                   2274 ;src/player.c:303: if (player.hull.current_value <= 0 && animation_frames_left == 0) {
      000839 21r49r00         [12] 2275 	ld	hl, #(_player + 73)
      00083C 2A               [ 8] 2276 	ld	a, (hl+)
      00083D 4F               [ 4] 2277 	ld	c, a
      00083E 46               [ 8] 2278 	ld	b, (hl)
      00083F 58               [ 4] 2279 	ld	e, b
      000840 AF               [ 4] 2280 	xor	a, a
      000841 57               [ 4] 2281 	ld	d, a
      000842 B9               [ 4] 2282 	cp	a, c
      000843 98               [ 4] 2283 	sbc	a, b
      000844 CB 7B            [ 8] 2284 	bit	7, e
      000846 28 07            [12] 2285 	jr	Z, 00120$
      000848 CB 7A            [ 8] 2286 	bit	7, d
      00084A 20 08            [12] 2287 	jr	NZ, 00121$
      00084C BF               [ 4] 2288 	cp	a, a
      00084D 18 05            [12] 2289 	jr	00121$
      00084F                       2290 00120$:
      00084F CB 7A            [ 8] 2291 	bit	7, d
      000851 28 01            [12] 2292 	jr	Z, 00121$
      000853 37               [ 4] 2293 	scf
      000854                       2294 00121$:
      000854 D8               [20] 2295 	ret	C
      000855 FAr00r00         [16] 2296 	ld	a, (#_animation_frames_left)
      000858 B7               [ 4] 2297 	or	a, a
      000859 C0               [20] 2298 	ret	NZ
                           00085A  2299 	C$player.c$304$2_0$316	= .
                                   2300 	.globl	C$player.c$304$2_0$316
                                   2301 ;src/player.c:304: player_alive = FALSE;
      00085A 21r00r00         [12] 2302 	ld	hl, #_player_alive
      00085D 36 00            [12] 2303 	ld	(hl), #0x00
                           00085F  2304 	C$player.c$305$2_0$316	= .
                                   2305 	.globl	C$player.c$305$2_0$316
                                   2306 ;src/player.c:305: player.hull.current_value = 0;
      00085F 21r49r00         [12] 2307 	ld	hl, #(_player + 73)
      000862 AF               [ 4] 2308 	xor	a, a
      000863 22               [ 8] 2309 	ld	(hl+), a
      000864 77               [ 8] 2310 	ld	(hl), a
                           000865  2311 	C$player.c$307$1_0$315	= .
                                   2312 	.globl	C$player.c$307$1_0$315
                                   2313 ;src/player.c:307: }
                           000865  2314 	C$player.c$307$1_0$315	= .
                                   2315 	.globl	C$player.c$307$1_0$315
                           000865  2316 	XG$check_hull$0$0	= .
                                   2317 	.globl	XG$check_hull$0$0
      000865 C9               [16] 2318 	ret
                           000866  2319 	G$check_fuel$0$0	= .
                                   2320 	.globl	G$check_fuel$0$0
                           000866  2321 	C$player.c$309$1_0$318	= .
                                   2322 	.globl	C$player.c$309$1_0$318
                                   2323 ;src/player.c:309: void check_fuel(void){
                                   2324 ;	---------------------------------
                                   2325 ; Function check_fuel
                                   2326 ; ---------------------------------
      000866                       2327 _check_fuel::
                           000866  2328 	C$player.c$310$1_0$318	= .
                                   2329 	.globl	C$player.c$310$1_0$318
                                   2330 ;src/player.c:310: if (player.fuel.current_value <= 0 && animation_frames_left == 0) {
      000866 21r10r00         [12] 2331 	ld	hl, #(_player + 16)
      000869 2A               [ 8] 2332 	ld	a, (hl+)
      00086A 4F               [ 4] 2333 	ld	c, a
      00086B 46               [ 8] 2334 	ld	b, (hl)
      00086C 58               [ 4] 2335 	ld	e, b
      00086D AF               [ 4] 2336 	xor	a, a
      00086E 57               [ 4] 2337 	ld	d, a
      00086F B9               [ 4] 2338 	cp	a, c
      000870 98               [ 4] 2339 	sbc	a, b
      000871 CB 7B            [ 8] 2340 	bit	7, e
      000873 28 07            [12] 2341 	jr	Z, 00120$
      000875 CB 7A            [ 8] 2342 	bit	7, d
      000877 20 08            [12] 2343 	jr	NZ, 00121$
      000879 BF               [ 4] 2344 	cp	a, a
      00087A 18 05            [12] 2345 	jr	00121$
      00087C                       2346 00120$:
      00087C CB 7A            [ 8] 2347 	bit	7, d
      00087E 28 01            [12] 2348 	jr	Z, 00121$
      000880 37               [ 4] 2349 	scf
      000881                       2350 00121$:
      000881 D8               [20] 2351 	ret	C
      000882 FAr00r00         [16] 2352 	ld	a, (#_animation_frames_left)
      000885 B7               [ 4] 2353 	or	a, a
      000886 C0               [20] 2354 	ret	NZ
                           000887  2355 	C$player.c$311$2_0$319	= .
                                   2356 	.globl	C$player.c$311$2_0$319
                                   2357 ;src/player.c:311: player_alive = FALSE;
      000887 21r00r00         [12] 2358 	ld	hl, #_player_alive
      00088A 36 00            [12] 2359 	ld	(hl), #0x00
                           00088C  2360 	C$player.c$312$2_0$319	= .
                                   2361 	.globl	C$player.c$312$2_0$319
                                   2362 ;src/player.c:312: player.fuel.current_value = 0;
      00088C 21r10r00         [12] 2363 	ld	hl, #(_player + 16)
      00088F AF               [ 4] 2364 	xor	a, a
      000890 22               [ 8] 2365 	ld	(hl+), a
      000891 77               [ 8] 2366 	ld	(hl), a
                           000892  2367 	C$player.c$314$1_0$318	= .
                                   2368 	.globl	C$player.c$314$1_0$318
                                   2369 ;src/player.c:314: }
                           000892  2370 	C$player.c$314$1_0$318	= .
                                   2371 	.globl	C$player.c$314$1_0$318
                           000892  2372 	XG$check_fuel$0$0	= .
                                   2373 	.globl	XG$check_fuel$0$0
      000892 C9               [16] 2374 	ret
                           000893  2375 	G$update_fuel$0$0	= .
                                   2376 	.globl	G$update_fuel$0$0
                           000893  2377 	C$player.c$315$1_0$321	= .
                                   2378 	.globl	C$player.c$315$1_0$321
                                   2379 ;src/player.c:315: void update_fuel(void){
                                   2380 ;	---------------------------------
                                   2381 ; Function update_fuel
                                   2382 ; ---------------------------------
      000893                       2383 _update_fuel::
                           000893  2384 	C$player.c$316$1_0$321	= .
                                   2385 	.globl	C$player.c$316$1_0$321
                                   2386 ;src/player.c:316: if (frame_counter == 0) {
      000893 FAr00r00         [16] 2387 	ld	a, (#_frame_counter)
      000896 B7               [ 4] 2388 	or	a, a
      000897 20 0D            [12] 2389 	jr	NZ, 00102$
                           000899  2390 	C$player.c$317$2_0$322	= .
                                   2391 	.globl	C$player.c$317$2_0$322
                                   2392 ;src/player.c:317: player.fuel.current_value --;   // only once every 60 frames
      000899 21r10r00         [12] 2393 	ld	hl, #(_player + 16)
      00089C 2A               [ 8] 2394 	ld	a, (hl+)
      00089D 4F               [ 4] 2395 	ld	c, a
      00089E 46               [ 8] 2396 	ld	b, (hl)
      00089F 0B               [ 8] 2397 	dec	bc
      0008A0 21r10r00         [12] 2398 	ld	hl, #(_player + 16)
      0008A3 79               [ 4] 2399 	ld	a, c
      0008A4 22               [ 8] 2400 	ld	(hl+), a
      0008A5 70               [ 8] 2401 	ld	(hl), b
      0008A6                       2402 00102$:
                           0008A6  2403 	C$player.c$319$1_0$321	= .
                                   2404 	.globl	C$player.c$319$1_0$321
                                   2405 ;src/player.c:319: if (depth <= EARTH_START) player.fuel.current_value = player.fuel.max_value;
      0008A6 3E 05            [ 8] 2406 	ld	a, #0x05
      0008A8 21r00r00         [12] 2407 	ld	hl, #_depth
      0008AB 96               [ 8] 2408 	sub	a, (hl)
      0008AC D8               [20] 2409 	ret	C
      0008AD 21r12r00         [12] 2410 	ld	hl, #_player + 18
      0008B0 2A               [ 8] 2411 	ld	a, (hl+)
      0008B1 4F               [ 4] 2412 	ld	c, a
      0008B2 46               [ 8] 2413 	ld	b, (hl)
      0008B3 21r10r00         [12] 2414 	ld	hl, #(_player + 16)
      0008B6 79               [ 4] 2415 	ld	a, c
      0008B7 22               [ 8] 2416 	ld	(hl+), a
      0008B8 70               [ 8] 2417 	ld	(hl), b
                           0008B9  2418 	C$player.c$320$1_0$321	= .
                                   2419 	.globl	C$player.c$320$1_0$321
                                   2420 ;src/player.c:320: }
                           0008B9  2421 	C$player.c$320$1_0$321	= .
                                   2422 	.globl	C$player.c$320$1_0$321
                           0008B9  2423 	XG$update_fuel$0$0	= .
                                   2424 	.globl	XG$update_fuel$0$0
      0008B9 C9               [16] 2425 	ret
                           0008BA  2426 	G$check_enter_buildings$0$0	= .
                                   2427 	.globl	G$check_enter_buildings$0$0
                           0008BA  2428 	C$player.c$322$1_0$324	= .
                                   2429 	.globl	C$player.c$322$1_0$324
                                   2430 ;src/player.c:322: void check_enter_buildings(void){
                                   2431 ;	---------------------------------
                                   2432 ; Function check_enter_buildings
                                   2433 ; ---------------------------------
      0008BA                       2434 _check_enter_buildings::
                           0008BA  2435 	C$player.c$324$1_0$324	= .
                                   2436 	.globl	C$player.c$324$1_0$324
                                   2437 ;src/player.c:324: if (depth == STATION_SHOP_Y && width == STATION_SHOP_X && animation_frames_left == 0 && left_shop_area) {
      0008BA FAr00r00         [16] 2438 	ld	a, (#_depth)
      0008BD D6 05            [ 8] 2439 	sub	a, #0x05
      0008BF 3E 01            [ 8] 2440 	ld	a, #0x01
      0008C1 28 01            [12] 2441 	jr	Z, 00192$
      0008C3 AF               [ 4] 2442 	xor	a, a
      0008C4                       2443 00192$:
      0008C4 4F               [ 4] 2444 	ld	c, a
      0008C5 FAr00r00         [16] 2445 	ld	a, (#_width)
      0008C8 D6 02            [ 8] 2446 	sub	a, #0x02
      0008CA 3E 01            [ 8] 2447 	ld	a, #0x01
      0008CC 28 01            [12] 2448 	jr	Z, 00194$
      0008CE AF               [ 4] 2449 	xor	a, a
      0008CF                       2450 00194$:
      0008CF 47               [ 4] 2451 	ld	b, a
      0008D0 79               [ 4] 2452 	ld	a, c
      0008D1 B7               [ 4] 2453 	or	a, a
      0008D2 28 21            [12] 2454 	jr	Z, 00105$
      0008D4 78               [ 4] 2455 	ld	a, b
      0008D5 B7               [ 4] 2456 	or	a, a
      0008D6 28 1D            [12] 2457 	jr	Z, 00105$
      0008D8 FAr00r00         [16] 2458 	ld	a, (#_animation_frames_left)
      0008DB B7               [ 4] 2459 	or	a, a
      0008DC 20 17            [12] 2460 	jr	NZ, 00105$
      0008DE FAr00r00         [16] 2461 	ld	a, (#_left_shop_area)
      0008E1 B7               [ 4] 2462 	or	a, a
      0008E2 28 11            [12] 2463 	jr	Z, 00105$
                           0008E4  2464 	C$player.c$325$2_0$325	= .
                                   2465 	.globl	C$player.c$325$2_0$325
                                   2466 ;src/player.c:325: currentGameState = GAME_STATE_UPGRADE_MENU;
      0008E4 21r00r00         [12] 2467 	ld	hl, #_currentGameState
      0008E7 36 01            [12] 2468 	ld	(hl), #0x01
                           0008E9  2469 	C$player.c$326$2_0$325	= .
                                   2470 	.globl	C$player.c$326$2_0$325
                                   2471 ;src/player.c:326: velocity = 0;
      0008E9 21r00r00         [12] 2472 	ld	hl, #_velocity
      0008EC 36 00            [12] 2473 	ld	(hl), #0x00
                           0008EE  2474 	C$player.c$327$2_0$325	= .
                                   2475 	.globl	C$player.c$327$2_0$325
                                   2476 ;src/player.c:327: left_shop_area = FALSE;  // Player enters the shop, set flag to false
      0008EE 21r00r00         [12] 2477 	ld	hl, #_left_shop_area
      0008F1 36 00            [12] 2478 	ld	(hl), #0x00
      0008F3 18 0E            [12] 2479 	jr	00106$
      0008F5                       2480 00105$:
                           0008F5  2481 	C$player.c$328$1_0$324	= .
                                   2482 	.globl	C$player.c$328$1_0$324
                                   2483 ;src/player.c:328: } else if (depth != STATION_SHOP_Y || width != STATION_SHOP_X) {
      0008F5 59               [ 4] 2484 	ld	e, c
      0008F6 CB 43            [ 8] 2485 	bit	0, e
      0008F8 28 04            [12] 2486 	jr	Z, 00101$
      0008FA CB 40            [ 8] 2487 	bit	0, b
      0008FC 20 05            [12] 2488 	jr	NZ, 00106$
      0008FE                       2489 00101$:
                           0008FE  2490 	C$player.c$329$2_0$326	= .
                                   2491 	.globl	C$player.c$329$2_0$326
                                   2492 ;src/player.c:329: left_shop_area = TRUE;  // Player moves away from the shop trigger location
      0008FE 21r00r00         [12] 2493 	ld	hl, #_left_shop_area
      000901 36 01            [12] 2494 	ld	(hl), #0x01
      000903                       2495 00106$:
                           000903  2496 	C$player.c$333$1_0$324	= .
                                   2497 	.globl	C$player.c$333$1_0$324
                                   2498 ;src/player.c:333: if (depth == STATION_SELL_Y && width == STATION_SELL_X && animation_frames_left == 0 && left_sell_area) {
      000903 FAr00r00         [16] 2499 	ld	a, (#_width)
      000906 D6 0A            [ 8] 2500 	sub	a, #0x0a
      000908 3E 01            [ 8] 2501 	ld	a, #0x01
      00090A 28 01            [12] 2502 	jr	Z, 00196$
      00090C AF               [ 4] 2503 	xor	a, a
      00090D                       2504 00196$:
      00090D 47               [ 4] 2505 	ld	b, a
      00090E 79               [ 4] 2506 	ld	a, c
      00090F B7               [ 4] 2507 	or	a, a
      000910 28 20            [12] 2508 	jr	Z, 00114$
      000912 78               [ 4] 2509 	ld	a, b
      000913 B7               [ 4] 2510 	or	a, a
      000914 28 1C            [12] 2511 	jr	Z, 00114$
      000916 FAr00r00         [16] 2512 	ld	a, (#_animation_frames_left)
      000919 B7               [ 4] 2513 	or	a, a
      00091A 20 16            [12] 2514 	jr	NZ, 00114$
      00091C FAr00r00         [16] 2515 	ld	a, (#_left_sell_area)
      00091F B7               [ 4] 2516 	or	a, a
      000920 28 10            [12] 2517 	jr	Z, 00114$
                           000922  2518 	C$player.c$334$2_0$327	= .
                                   2519 	.globl	C$player.c$334$2_0$327
                                   2520 ;src/player.c:334: currentGameState = GAME_STATE_SELL_MENU;
      000922 21r00r00         [12] 2521 	ld	hl, #_currentGameState
      000925 36 02            [12] 2522 	ld	(hl), #0x02
                           000927  2523 	C$player.c$335$2_0$327	= .
                                   2524 	.globl	C$player.c$335$2_0$327
                                   2525 ;src/player.c:335: velocity = 0;
      000927 21r00r00         [12] 2526 	ld	hl, #_velocity
      00092A 36 00            [12] 2527 	ld	(hl), #0x00
                           00092C  2528 	C$player.c$336$2_0$327	= .
                                   2529 	.globl	C$player.c$336$2_0$327
                                   2530 ;src/player.c:336: left_sell_area = FALSE;  // Player enters the sell station, set flag to false
      00092C 21r00r00         [12] 2531 	ld	hl, #_left_sell_area
      00092F 36 00            [12] 2532 	ld	(hl), #0x00
      000931 C9               [16] 2533 	ret
      000932                       2534 00114$:
                           000932  2535 	C$player.c$337$1_0$324	= .
                                   2536 	.globl	C$player.c$337$1_0$324
                                   2537 ;src/player.c:337: } else if (depth != STATION_SELL_Y || width != STATION_SELL_X) {
      000932 CB 41            [ 8] 2538 	bit	0, c
      000934 28 03            [12] 2539 	jr	Z, 00110$
      000936 CB 40            [ 8] 2540 	bit	0, b
      000938 C0               [20] 2541 	ret	NZ
      000939                       2542 00110$:
                           000939  2543 	C$player.c$338$2_0$328	= .
                                   2544 	.globl	C$player.c$338$2_0$328
                                   2545 ;src/player.c:338: left_sell_area = TRUE;  // Player moves away from the sell station trigger location
      000939 21r00r00         [12] 2546 	ld	hl, #_left_sell_area
      00093C 36 01            [12] 2547 	ld	(hl), #0x01
                           00093E  2548 	C$player.c$340$1_0$324	= .
                                   2549 	.globl	C$player.c$340$1_0$324
                                   2550 ;src/player.c:340: }
                           00093E  2551 	C$player.c$340$1_0$324	= .
                                   2552 	.globl	C$player.c$340$1_0$324
                           00093E  2553 	XG$check_enter_buildings$0$0	= .
                                   2554 	.globl	XG$check_enter_buildings$0$0
      00093E C9               [16] 2555 	ret
                           00093F  2556 	G$check_game_over$0$0	= .
                                   2557 	.globl	G$check_game_over$0$0
                           00093F  2558 	C$player.c$342$1_0$330	= .
                                   2559 	.globl	C$player.c$342$1_0$330
                                   2560 ;src/player.c:342: void check_game_over(void){
                                   2561 ;	---------------------------------
                                   2562 ; Function check_game_over
                                   2563 ; ---------------------------------
      00093F                       2564 _check_game_over::
                           00093F  2565 	C$player.c$343$1_0$330	= .
                                   2566 	.globl	C$player.c$343$1_0$330
                                   2567 ;src/player.c:343: if (player_alive == FALSE) {
      00093F FAr00r00         [16] 2568 	ld	a, (#_player_alive)
      000942 B7               [ 4] 2569 	or	a, a
      000943 C0               [20] 2570 	ret	NZ
                           000944  2571 	C$player.c$344$2_0$331	= .
                                   2572 	.globl	C$player.c$344$2_0$331
                                   2573 ;src/player.c:344: currentGameState = GAME_STATE_GAME_OVER;
      000944 21r00r00         [12] 2574 	ld	hl, #_currentGameState
      000947 36 04            [12] 2575 	ld	(hl), #0x04
                           000949  2576 	C$player.c$346$1_0$330	= .
                                   2577 	.globl	C$player.c$346$1_0$330
                                   2578 ;src/player.c:346: }
                           000949  2579 	C$player.c$346$1_0$330	= .
                                   2580 	.globl	C$player.c$346$1_0$330
                           000949  2581 	XG$check_game_over$0$0	= .
                                   2582 	.globl	XG$check_game_over$0$0
      000949 C9               [16] 2583 	ret
                           00094A  2584 	G$reset_player$0$0	= .
                                   2585 	.globl	G$reset_player$0$0
                           00094A  2586 	C$player.c$348$1_0$333	= .
                                   2587 	.globl	C$player.c$348$1_0$333
                                   2588 ;src/player.c:348: void reset_player(void){
                                   2589 ;	---------------------------------
                                   2590 ; Function reset_player
                                   2591 ; ---------------------------------
      00094A                       2592 _reset_player::
                           00094A  2593 	C$player.c$349$1_0$333	= .
                                   2594 	.globl	C$player.c$349$1_0$333
                                   2595 ;src/player.c:349: player_alive = TRUE; // Reset player alive status
      00094A 21r00r00         [12] 2596 	ld	hl, #_player_alive
      00094D 36 01            [12] 2597 	ld	(hl), #0x01
                           00094F  2598 	C$player.c$350$1_0$333	= .
                                   2599 	.globl	C$player.c$350$1_0$333
                                   2600 ;src/player.c:350: player.hull.current_value = player.hull.max_value;
      00094F 21r4Br00         [12] 2601 	ld	hl, #_player + 75
      000952 2A               [ 8] 2602 	ld	a, (hl+)
      000953 4F               [ 4] 2603 	ld	c, a
      000954 46               [ 8] 2604 	ld	b, (hl)
      000955 21r49r00         [12] 2605 	ld	hl, #(_player + 73)
      000958 79               [ 4] 2606 	ld	a, c
      000959 22               [ 8] 2607 	ld	(hl+), a
      00095A 70               [ 8] 2608 	ld	(hl), b
                           00095B  2609 	C$player.c$351$1_0$333	= .
                                   2610 	.globl	C$player.c$351$1_0$333
                                   2611 ;src/player.c:351: player.fuel.current_value = player.fuel.max_value;
      00095B 21r12r00         [12] 2612 	ld	hl, #_player + 18
      00095E 2A               [ 8] 2613 	ld	a, (hl+)
      00095F 4F               [ 4] 2614 	ld	c, a
      000960 46               [ 8] 2615 	ld	b, (hl)
      000961 21r10r00         [12] 2616 	ld	hl, #(_player + 16)
      000964 79               [ 4] 2617 	ld	a, c
      000965 22               [ 8] 2618 	ld	(hl+), a
      000966 70               [ 8] 2619 	ld	(hl), b
                           000967  2620 	C$player.c$352$1_0$333	= .
                                   2621 	.globl	C$player.c$352$1_0$333
                                   2622 ;src/player.c:352: }
                           000967  2623 	C$player.c$352$1_0$333	= .
                                   2624 	.globl	C$player.c$352$1_0$333
                           000967  2625 	XG$reset_player$0$0	= .
                                   2626 	.globl	XG$reset_player$0$0
      000967 C9               [16] 2627 	ret
                                   2628 	.area _CODE_1
                                   2629 	.area _INITIALIZER
                                   2630 	.area _CABS (ABS)
